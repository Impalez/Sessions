

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Thu Apr 10 22:18:50 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           	psect	idataCOMRAM
    34  01F7A8                     __pidataCOMRAM:
    35                           	opt stack 0
    36                           
    37                           ;initializer for sequence2@F7300
    38  01F7A8  50                 	db	80
    39  01F7A9  6F                 	db	111
    40  01F7AA  74                 	db	116
    41  01F7AB  69                 	db	105
    42  01F7AC  20                 	db	32
    43  01F7AD  76                 	db	118
    44  01F7AE  61                 	db	97
    45  01F7AF  6C                 	db	108
    46  01F7B0  75                 	db	117
    47  01F7B1  65                 	db	101
    48  01F7B2  20                 	db	32
    49  01F7B3  20                 	db	32
    50  01F7B4  20                 	db	32
    51  01F7B5  20                 	db	32
    52  01F7B6  20                 	db	32
    53  01F7B7  00                 	db	0
    54                           
    55                           ;initializer for _state
    56  01F7B8  0004               	dw	4
    57  0000                     _ADCON0	set	4034
    58  0000                     _ADCON0bits	set	4034
    59  0000                     _ADCON1	set	4033
    60  0000                     _ADCON2	set	4032
    61  0000                     _ADRESH	set	4036
    62  0000                     _LATD	set	3980
    63  0000                     _PIR1bits	set	3998
    64  0000                     _PORTAbits	set	3968
    65  0000                     _SSP1BUF	set	4041
    66  0000                     _SSP1CON1	set	4038
    67  0000                     _SSP1CON1bits	set	4038
    68  0000                     _SSP1STAT	set	4039
    69  0000                     _SSP1STATbits	set	4039
    70  0000                     _TRISA	set	3986
    71  0000                     _TRISAbits	set	3986
    72  0000                     _TRISCbits	set	3988
    73  0000                     _TRISD	set	3989
    74  0000                     _TRISFbits	set	3991
    75  0000                     _TRISA5	set	31893
    76  0000                     _TRISB0	set	31896
    77                           
    78                           ; #config settings
    79  0000                     
    80                           	psect	cinit
    81  01F87A                     __pcinit:
    82                           	opt stack 0
    83  01F87A                     start_initialization:
    84                           	opt stack 0
    85  01F87A                     __initialization:
    86                           	opt stack 0
    87                           
    88                           ; Initialize objects allocated to COMRAM (18 bytes)
    89                           ; load TBLPTR registers with __pidataCOMRAM
    90  01F87A  0EA8               	movlw	low __pidataCOMRAM
    91  01F87C  6EF6               	movwf	tblptrl,c
    92  01F87E  0EF7               	movlw	high __pidataCOMRAM
    93  01F880  6EF7               	movwf	tblptrh,c
    94  01F882  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
    95  01F884  6EF8               	movwf	tblptru,c
    96  01F886  EE00  F01E         	lfsr	0,__pdataCOMRAM
    97  01F88A  EE10 F012          	lfsr	1,18
    98  01F88E                     copy_data0:
    99  01F88E  0009               	tblrd		*+
   100  01F890  CFF5 FFEE          	movff	tablat,postinc0
   101  01F894  50E5               	movf	postdec1,w,c
   102  01F896  50E1               	movf	fsr1l,w,c
   103  01F898  E1FA               	bnz	copy_data0
   104  01F89A                     end_of_initialization:
   105                           	opt stack 0
   106  01F89A                     __end_of__initialization:
   107                           	opt stack 0
   108  01F89A  0100               	movlb	0
   109  01F89C  EFB2  F0FC         	goto	_main	;jump to C main() function
   110                           tblptru	equ	0xFF8
   111                           tblptrh	equ	0xFF7
   112                           tblptrl	equ	0xFF6
   113                           tablat	equ	0xFF5
   114                           postinc0	equ	0xFEE
   115                           postdec1	equ	0xFE5
   116                           fsr1l	equ	0xFE1
   117                           
   118                           	psect	dataCOMRAM
   119  00001E                     __pdataCOMRAM:
   120                           	opt stack 0
   121  00001E                     sequence2@F7300:
   122                           	opt stack 0
   123  00001E                     	ds	16
   124  00002E                     _state:
   125                           	opt stack 0
   126  00002E                     	ds	2
   127                           tblptru	equ	0xFF8
   128                           tblptrh	equ	0xFF7
   129                           tblptrl	equ	0xFF6
   130                           tablat	equ	0xFF5
   131                           postinc0	equ	0xFEE
   132                           postdec1	equ	0xFE5
   133                           fsr1l	equ	0xFE1
   134                           
   135                           	psect	cstackCOMRAM
   136  000001                     __pcstackCOMRAM:
   137                           	opt stack 0
   138  000001                     ??_Delay10KTCYx:
   139  000001                     ?___awdiv:
   140                           	opt stack 0
   141  000001                     ?___awmod:
   142                           	opt stack 0
   143  000001                     OpenSPI1@bus_mode:
   144                           	opt stack 0
   145  000001                     WriteSPI1@TempVar:
   146                           	opt stack 0
   147  000001                     ___awdiv@dividend:
   148                           	opt stack 0
   149  000001                     ___awmod@dividend:
   150                           	opt stack 0
   151                           
   152                           ; 2 bytes @ 0x0
   153  000001                     	ds	1
   154  000002                     OpenSPI1@smp_phase:
   155                           	opt stack 0
   156  000002                     WriteSPI1@data_out:
   157                           	opt stack 0
   158  000002                     Delay10KTCYx@unit:
   159                           	opt stack 0
   160                           
   161                           ; 1 bytes @ 0x1
   162  000002                     	ds	1
   163  000003                     ??_sequence1:
   164  000003                     ??_sequence4:
   165  000003                     setGPIO@value:
   166                           	opt stack 0
   167  000003                     setIODIR@dir:
   168                           	opt stack 0
   169  000003                     OpenSPI1@sync_mode:
   170                           	opt stack 0
   171  000003                     ___awdiv@divisor:
   172                           	opt stack 0
   173  000003                     ___awmod@divisor:
   174                           	opt stack 0
   175                           
   176                           ; 2 bytes @ 0x2
   177  000003                     	ds	1
   178  000004                     setGPIO@address:
   179                           	opt stack 0
   180  000004                     setIODIR@address:
   181                           	opt stack 0
   182  000004                     sequence1@potiValue:
   183                           	opt stack 0
   184                           
   185                           ; 1 bytes @ 0x3
   186  000004                     	ds	1
   187  000005                     ??_lcdCommand:
   188  000005                     ??_LcdChar:
   189  000005                     ??___awdiv:
   190  000005                     ??___awmod:
   191  000005                     sequence4@potiValue:
   192                           	opt stack 0
   193                           
   194                           ; 1 bytes @ 0x4
   195  000005                     	ds	1
   196  000006                     lcdCommand@command:
   197                           	opt stack 0
   198  000006                     LcdChar@letter:
   199                           	opt stack 0
   200  000006                     ___awdiv@counter:
   201                           	opt stack 0
   202  000006                     ___awmod@counter:
   203                           	opt stack 0
   204  000006                     sequence4@j:
   205                           	opt stack 0
   206                           
   207                           ; 2 bytes @ 0x5
   208  000006                     	ds	1
   209  000007                     ??_LcdInit:
   210  000007                     LcdGoTo@pos:
   211                           	opt stack 0
   212  000007                     ___awdiv@sign:
   213                           	opt stack 0
   214  000007                     ___awmod@sign:
   215                           	opt stack 0
   216  000007                     LcdWriteString@s:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0x6
   220  000007                     	ds	1
   221  000008                     sequence4@ledValue:
   222                           	opt stack 0
   223  000008                     ___awdiv@quotient:
   224                           	opt stack 0
   225                           
   226                           ; 2 bytes @ 0x7
   227  000008                     	ds	1
   228  000009                     sequence4@i:
   229                           	opt stack 0
   230                           
   231                           ; 2 bytes @ 0x8
   232  000009                     	ds	1
   233  00000A                     ??_sequence2:
   234  00000A                     ??_sequence3:
   235                           
   236                           ; 0 bytes @ 0x9
   237  00000A                     	ds	1
   238  00000B                     sequence2@message:
   239                           	opt stack 0
   240                           
   241                           ; 16 bytes @ 0xA
   242  00000B                     	ds	1
   243  00000C                     sequence3@i:
   244                           	opt stack 0
   245                           
   246                           ; 1 bytes @ 0xB
   247  00000C                     	ds	1
   248  00000D                     sequence3@potiValue:
   249                           	opt stack 0
   250                           
   251                           ; 1 bytes @ 0xC
   252  00000D                     	ds	14
   253  00001B                     sequence2@potiValue:
   254                           	opt stack 0
   255                           
   256                           ; 1 bytes @ 0x1A
   257  00001B                     	ds	1
   258  00001C                     ??_main:
   259                           
   260                           ; 0 bytes @ 0x1B
   261  00001C                     	ds	2
   262                           tblptru	equ	0xFF8
   263                           tblptrh	equ	0xFF7
   264                           tblptrl	equ	0xFF6
   265                           tablat	equ	0xFF5
   266                           postinc0	equ	0xFEE
   267                           postdec1	equ	0xFE5
   268                           fsr1l	equ	0xFE1
   269                           
   270 ;;
   271 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   272 ;;
   273 ;; *************** function _main *****************
   274 ;; Defined at:
   275 ;;		line 184 in file "AnalogInputs.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;		None
   278 ;; Auto vars:     Size  Location     Type
   279 ;;		None
   280 ;; Return value:  Size  Location     Type
   281 ;;		None               void
   282 ;; Registers used:
   283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, cstack
   284 ;; Tracked objects:
   285 ;;		On entry : 0/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   291 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   292 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   293 ;;Total ram usage:        2 bytes
   294 ;; Hardware stack levels required when called:    5
   295 ;; This function calls:
   296 ;;		_LcdInit
   297 ;;		_initAdc
   298 ;;		_initButtons
   299 ;;		_initLEDs
   300 ;;		_sequence1
   301 ;;		_sequence2
   302 ;;		_sequence3
   303 ;;		_sequence4
   304 ;; This function is called by:
   305 ;;		Startup code after reset
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309                           	psect	text0
   310  01F964                     __ptext0:
   311                           	opt stack 0
   312  01F964                     _main:
   313                           	opt stack 25
   314                           
   315                           ;AnalogInputs.c: 187: initButtons();
   316                           
   317                           ;incstack = 0
   318  01F964  ECC1  F0FB         	call	_initButtons	;wreg free
   319                           
   320                           ;AnalogInputs.c: 188: initAdc();
   321  01F968  ECDD  F0FB         	call	_initAdc	;wreg free
   322                           
   323                           ;AnalogInputs.c: 189: LcdInit();
   324  01F96C  EC08  F0FD         	call	_LcdInit	;wreg free
   325                           
   326                           ;AnalogInputs.c: 190: initLEDs();
   327  01F970  ECC8  F0FB         	call	_initLEDs	;wreg free
   328  01F974  D00B               	goto	l1090
   329  01F976                     l1080:
   330                           
   331                           ;AnalogInputs.c: 196: {
   332                           ;AnalogInputs.c: 197: sequence1();
   333  01F976  EC1C  F0FC         	call	_sequence1	;wreg free
   334                           
   335                           ;AnalogInputs.c: 198: break;
   336  01F97A  D008               	goto	l1090
   337  01F97C                     l1082:
   338                           
   339                           ;AnalogInputs.c: 201: {
   340                           ;AnalogInputs.c: 202: sequence2();
   341  01F97C  EC39  F0FD         	call	_sequence2	;wreg free
   342                           
   343                           ;AnalogInputs.c: 203: break;
   344  01F980  D005               	goto	l1090
   345  01F982                     l1084:
   346                           
   347                           ;AnalogInputs.c: 206: {
   348                           ;AnalogInputs.c: 207: sequence3();
   349  01F982  EC8A  F0FC         	call	_sequence3	;wreg free
   350                           
   351                           ;AnalogInputs.c: 208: break;
   352  01F986  D002               	goto	l1090
   353  01F988                     l1086:
   354                           
   355                           ;AnalogInputs.c: 211: {
   356                           ;AnalogInputs.c: 212: sequence4();
   357  01F988  ECD2  F0FD         	call	_sequence4	;wreg free
   358  01F98C                     l1090:
   359  01F98C  C02E  F01C         	movff	_state,??_main	;volatile
   360  01F990  C02F  F01D         	movff	_state+1,??_main+1	;volatile
   361                           
   362                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   363                           ; Switch size 1, requested type "space"
   364                           ; Number of cases is 1, Range of values is 0 to 0
   365                           ; switch strategies available:
   366                           ; Name         Instructions Cycles
   367                           ; simple_byte            4     3 (average)
   368                           ;	Chosen strategy is simple_byte
   369  01F994  501D               	movf	??_main+1,w,c
   370  01F996  0A00               	xorlw	0	; case 0
   371  01F998  A4D8               	btfss	status,2,c
   372  01F99A  D7F8               	goto	l1090
   373                           
   374                           ; Switch size 1, requested type "space"
   375                           ; Number of cases is 4, Range of values is 1 to 4
   376                           ; switch strategies available:
   377                           ; Name         Instructions Cycles
   378                           ; simple_byte           13     7 (average)
   379                           ;	Chosen strategy is simple_byte
   380  01F99C  501C               	movf	??_main,w,c
   381  01F99E  0A01               	xorlw	1	; case 1
   382  01F9A0  B4D8               	btfsc	status,2,c
   383  01F9A2  D7E9               	goto	l1080
   384  01F9A4  0A03               	xorlw	3	; case 2
   385  01F9A6  B4D8               	btfsc	status,2,c
   386  01F9A8  D7E9               	goto	l1082
   387  01F9AA  0A01               	xorlw	1	; case 3
   388  01F9AC  B4D8               	btfsc	status,2,c
   389  01F9AE  D7E9               	goto	l1084
   390  01F9B0  0A07               	xorlw	7	; case 4
   391  01F9B2  B4D8               	btfsc	status,2,c
   392  01F9B4  D7E9               	goto	l1086
   393  01F9B6  D7EA               	goto	l1090
   394  01F9B8                     __end_of_main:
   395                           	opt stack 0
   396                           tblptru	equ	0xFF8
   397                           tblptrh	equ	0xFF7
   398                           tblptrl	equ	0xFF6
   399                           tablat	equ	0xFF5
   400                           postinc0	equ	0xFEE
   401                           postdec1	equ	0xFE5
   402                           fsr1l	equ	0xFE1
   403                           status	equ	0xFD8
   404                           
   405 ;; *************** function _sequence4 *****************
   406 ;; Defined at:
   407 ;;		line 155 in file "AnalogInputs.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;  j               2    5[COMRAM] int 
   412 ;;  i               2    8[COMRAM] int 
   413 ;;  ledValue        1    7[COMRAM] unsigned char 
   414 ;;  potiValue       1    4[COMRAM] unsigned char 
   415 ;; Return value:  Size  Location     Type
   416 ;;		None               void
   417 ;; Registers used:
   418 ;;		wreg, status,2, status,0, prodl, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   425 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   426 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   427 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   428 ;;Total ram usage:        8 bytes
   429 ;; Hardware stack levels used:    1
   430 ;; Hardware stack levels required when called:    1
   431 ;; This function calls:
   432 ;;		_Delay10KTCYx
   433 ;; This function is called by:
   434 ;;		_main
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           	psect	text1
   439  01FBA4                     __ptext1:
   440                           	opt stack 0
   441  01FBA4                     _sequence4:
   442                           	opt stack 28
   443                           
   444                           ;AnalogInputs.c: 158: byte potiValue = 0;
   445                           
   446                           ;incstack = 0
   447  01FBA4  6E03               	movwf	??_sequence4& (0+255),c
   448  01FBA6  0E00               	movlw	0
   449  01FBA8  6E05               	movwf	sequence4@potiValue,c
   450  01FBAA  5003               	movf	??_sequence4& (0+255),w,c
   451                           
   452                           ;AnalogInputs.c: 159: byte ledValue =0;
   453  01FBAC  6E03               	movwf	??_sequence4& (0+255),c
   454  01FBAE  0E00               	movlw	0
   455  01FBB0  6E08               	movwf	sequence4@ledValue,c
   456  01FBB2  5003               	movf	??_sequence4& (0+255),w,c
   457                           
   458                           ;AnalogInputs.c: 160: int i =0;
   459  01FBB4  0E00               	movlw	0
   460  01FBB6  6E0A               	movwf	sequence4@i+1,c
   461  01FBB8  0E00               	movlw	0
   462  01FBBA  6E09               	movwf	sequence4@i,c
   463                           
   464                           ;AnalogInputs.c: 162: ADCON0bits.GO_DONE = 1;
   465  01FBBC  82C2               	bsf	4034,1,c	;volatile
   466  01FBBE                     l99:
   467  01FBBE  B2C2               	btfsc	4034,1,c	;volatile
   468  01FBC0  D7FE               	goto	l99
   469                           
   470                           ;AnalogInputs.c: 165: };
   471                           ;AnalogInputs.c: 166: potiValue = ADRESH;
   472  01FBC2  CFC4 F005          	movff	4036,sequence4@potiValue	;volatile
   473                           
   474                           ;AnalogInputs.c: 169: for (i=7;i>=0;i--){
   475  01FBC6  0E00               	movlw	0
   476  01FBC8  6E0A               	movwf	sequence4@i+1,c
   477  01FBCA  0E07               	movlw	7
   478  01FBCC  6E09               	movwf	sequence4@i,c
   479  01FBCE  500A               	movf	sequence4@i+1,w,c
   480  01FBD0  0A80               	xorlw	128
   481  01FBD2  6EF3               	movwf	prodl,c
   482  01FBD4  0E80               	movlw	128
   483  01FBD6  5CF3               	subwf	prodl,w,c
   484  01FBD8  0E00               	movlw	0
   485  01FBDA  B4D8               	btfsc	status,2,c
   486  01FBDC  5C09               	subwf	sequence4@i,w,c
   487  01FBDE  A0D8               	btfss	status,0,c
   488  01FBE0  D013               	goto	l1018
   489                           
   490                           ;AnalogInputs.c: 170: if(potiValue & 1<<i)
   491  01FBE2  C009  F003         	movff	sequence4@i,??_sequence4
   492  01FBE6  0E01               	movlw	1
   493  01FBE8  6E04               	movwf	(??_sequence4+1)& (0+255),c
   494  01FBEA  2A03               	incf	??_sequence4,f,c
   495  01FBEC  D002               	goto	u204
   496  01FBEE                     u205:
   497  01FBEE  90D8               	bcf	status,0,c
   498  01FBF0  3604               	rlcf	??_sequence4+1,f,c
   499  01FBF2                     u204:
   500  01FBF2  2E03               	decfsz	??_sequence4,f,c
   501  01FBF4  D7FC               	goto	u205
   502  01FBF6  5004               	movf	??_sequence4+1,w,c
   503  01FBF8  1405               	andwf	sequence4@potiValue,w,c
   504  01FBFA  0900               	iorlw	0
   505  01FBFC  A4D8               	btfss	status,2,c
   506  01FBFE  D004               	goto	l1018
   507                           
   508                           ;AnalogInputs.c: 171: break;
   509  01FC00  0609               	decf	sequence4@i,f,c
   510  01FC02  A0D8               	btfss	status,0,c
   511  01FC04  060A               	decf	sequence4@i+1,f,c
   512  01FC06  D7E3               	goto	L1
   513  01FC08                     l1018:
   514                           
   515                           ;AnalogInputs.c: 172: }
   516                           ;AnalogInputs.c: 174: for(int j=0;j<=i;j++){
   517  01FC08  0E00               	movlw	0
   518  01FC0A  6E07               	movwf	sequence4@j+1,c
   519  01FC0C  0E00               	movlw	0
   520  01FC0E  6E06               	movwf	sequence4@j,c
   521  01FC10  D00F               	goto	l1024
   522  01FC12                     l1020:
   523                           
   524                           ;AnalogInputs.c: 175: ledValue = ledValue | ( 1<<j);
   525  01FC12  C006  F003         	movff	sequence4@j,??_sequence4
   526  01FC16  0E01               	movlw	1
   527  01FC18  6E04               	movwf	(??_sequence4+1)& (0+255),c
   528  01FC1A  2A03               	incf	??_sequence4,f,c
   529  01FC1C  D002               	goto	u234
   530  01FC1E                     u235:
   531  01FC1E  90D8               	bcf	status,0,c
   532  01FC20  3604               	rlcf	??_sequence4+1,f,c
   533  01FC22                     u234:
   534  01FC22  2E03               	decfsz	??_sequence4,f,c
   535  01FC24  D7FC               	goto	u235
   536  01FC26  5004               	movf	??_sequence4+1,w,c
   537  01FC28  1008               	iorwf	sequence4@ledValue,w,c
   538  01FC2A  6E08               	movwf	sequence4@ledValue,c
   539  01FC2C  4A06               	infsnz	sequence4@j,f,c
   540  01FC2E  2A07               	incf	sequence4@j+1,f,c
   541  01FC30                     l1024:
   542  01FC30  500A               	movf	sequence4@i+1,w,c
   543  01FC32  0A80               	xorlw	128
   544  01FC34  6E03               	movwf	??_sequence4& (0+255),c
   545  01FC36  5006               	movf	sequence4@j,w,c
   546  01FC38  5C09               	subwf	sequence4@i,w,c
   547  01FC3A  5007               	movf	sequence4@j+1,w,c
   548  01FC3C  0A80               	xorlw	128
   549  01FC3E  5803               	subwfb	??_sequence4& (0+255),w,c
   550  01FC40  B0D8               	btfsc	status,0,c
   551  01FC42  D7E7               	goto	l1020
   552                           
   553                           ;AnalogInputs.c: 176: }
   554                           ;AnalogInputs.c: 178: LATD = ledValue;
   555  01FC44  C008  FF8C         	movff	sequence4@ledValue,3980	;volatile
   556                           
   557                           ;AnalogInputs.c: 179: Delay10KTCYx(10);
   558  01FC48  0E0A               	movlw	10
   559  01FC4A  ECE7  F0FB         	call	_Delay10KTCYx
   560  01FC4E  0012               	return	
   561  01FC50                     __end_of_sequence4:
   562                           	opt stack 0
   563                           tblptru	equ	0xFF8
   564                           tblptrh	equ	0xFF7
   565                           tblptrl	equ	0xFF6
   566                           tablat	equ	0xFF5
   567                           prodl	equ	0xFF3
   568                           postinc0	equ	0xFEE
   569                           postdec1	equ	0xFE5
   570                           fsr1l	equ	0xFE1
   571                           status	equ	0xFD8
   572                           
   573 ;; *************** function _sequence3 *****************
   574 ;; Defined at:
   575 ;;		line 126 in file "AnalogInputs.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  potiValue       1   12[COMRAM] unsigned char 
   580 ;;  i               1   11[COMRAM] unsigned char 
   581 ;; Return value:  Size  Location     Type
   582 ;;		None               void
   583 ;; Registers used:
   584 ;;		wreg, status,2, status,0, prodl, cstack
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;Total ram usage:        4 bytes
   595 ;; Hardware stack levels used:    1
   596 ;; Hardware stack levels required when called:    1
   597 ;; This function calls:
   598 ;;		_Delay10KTCYx
   599 ;;		___awdiv
   600 ;; This function is called by:
   601 ;;		_main
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text2
   606  01F914                     __ptext2:
   607                           	opt stack 0
   608  01F914                     _sequence3:
   609                           	opt stack 28
   610                           
   611                           ;AnalogInputs.c: 129: byte potiValue = 0;
   612                           
   613                           ;incstack = 0
   614  01F914  6E0A               	movwf	??_sequence3& (0+255),c
   615  01F916  0E00               	movlw	0
   616  01F918  6E0D               	movwf	sequence3@potiValue,c
   617  01F91A  500A               	movf	??_sequence3& (0+255),w,c
   618                           
   619                           ;AnalogInputs.c: 130: byte i =0;
   620  01F91C  6E0A               	movwf	??_sequence3& (0+255),c
   621  01F91E  0E00               	movlw	0
   622  01F920  6E0C               	movwf	sequence3@i,c
   623  01F922  500A               	movf	??_sequence3& (0+255),w,c
   624                           
   625                           ;AnalogInputs.c: 132: ADCON0bits.GO_DONE = 1;
   626  01F924  82C2               	bsf	4034,1,c	;volatile
   627  01F926                     l93:
   628  01F926  B2C2               	btfsc	4034,1,c	;volatile
   629  01F928  D7FE               	goto	l93
   630                           
   631                           ;AnalogInputs.c: 135: }
   632                           ;AnalogInputs.c: 136: potiValue = ADRESH;
   633  01F92A  CFC4 F00D          	movff	4036,sequence3@potiValue	;volatile
   634                           
   635                           ;AnalogInputs.c: 139: potiValue = potiValue / 32;
   636  01F92E  C00D  F001         	movff	sequence3@potiValue,___awdiv@dividend
   637  01F932  6A02               	clrf	___awdiv@dividend+1,c
   638  01F934  0E00               	movlw	0
   639  01F936  6E04               	movwf	___awdiv@divisor+1,c
   640  01F938  0E20               	movlw	32
   641  01F93A  6E03               	movwf	___awdiv@divisor,c
   642  01F93C  EC28  F0FE         	call	___awdiv	;wreg free
   643  01F940  5001               	movf	?___awdiv,w,c
   644  01F942  6E0D               	movwf	sequence3@potiValue,c
   645                           
   646                           ;AnalogInputs.c: 144: LATD =1<<potiValue;
   647  01F944  C00D  F00A         	movff	sequence3@potiValue,??_sequence3
   648  01F948  0E01               	movlw	1
   649  01F94A  6E0B               	movwf	(??_sequence3+1)& (0+255),c
   650  01F94C  2A0A               	incf	??_sequence3,f,c
   651  01F94E  D002               	goto	u174
   652  01F950                     u175:
   653  01F950  90D8               	bcf	status,0,c
   654  01F952  360B               	rlcf	??_sequence3+1,f,c
   655  01F954                     u174:
   656  01F954  2E0A               	decfsz	??_sequence3,f,c
   657  01F956  D7FC               	goto	u175
   658  01F958  500B               	movf	??_sequence3+1,w,c
   659  01F95A  6E8C               	movwf	3980,c	;volatile
   660                           
   661                           ;AnalogInputs.c: 146: Delay10KTCYx(10);
   662  01F95C  0E0A               	movlw	10
   663  01F95E  ECE7  F0FB         	call	_Delay10KTCYx
   664  01F962  0012               	return	
   665  01F964                     __end_of_sequence3:
   666                           	opt stack 0
   667                           tblptru	equ	0xFF8
   668                           tblptrh	equ	0xFF7
   669                           tblptrl	equ	0xFF6
   670                           tablat	equ	0xFF5
   671                           prodl	equ	0xFF3
   672                           postinc0	equ	0xFEE
   673                           postdec1	equ	0xFE5
   674                           fsr1l	equ	0xFE1
   675                           status	equ	0xFD8
   676                           
   677 ;; *************** function _sequence2 *****************
   678 ;; Defined at:
   679 ;;		line 97 in file "AnalogInputs.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  message        16   10[COMRAM] unsigned char [16]
   684 ;;  potiValue       1   26[COMRAM] unsigned char 
   685 ;; Return value:  Size  Location     Type
   686 ;;		None               void
   687 ;; Registers used:
   688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   698 ;;Total ram usage:       18 bytes
   699 ;; Hardware stack levels used:    1
   700 ;; Hardware stack levels required when called:    4
   701 ;; This function calls:
   702 ;;		_LcdGoTo
   703 ;;		_LcdWriteString
   704 ;;		___awdiv
   705 ;;		___awmod
   706 ;; This function is called by:
   707 ;;		_main
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text3
   712  01FA72                     __ptext3:
   713                           	opt stack 0
   714  01FA72                     _sequence2:
   715                           	opt stack 25
   716                           
   717                           ;AnalogInputs.c: 99: byte potiValue = 0;
   718                           
   719                           ;incstack = 0
   720  01FA72  6E0A               	movwf	??_sequence2& (0+255),c
   721  01FA74  0E00               	movlw	0
   722  01FA76  6E1B               	movwf	sequence2@potiValue,c
   723  01FA78  500A               	movf	??_sequence2& (0+255),w,c
   724                           
   725                           ;AnalogInputs.c: 100: char message[16] = "Poti value     ";
   726  01FA7A  EE20  F01E         	lfsr	2,sequence2@F7300
   727  01FA7E  EE10  F00B         	lfsr	1,sequence2@message
   728  01FA82  0E10               	movlw	16
   729  01FA84                     u261:
   730  01FA84  CFDE FFE6          	movff	postinc2,postinc1
   731  01FA88  2EE8               	decfsz	wreg,f,c
   732  01FA8A  D7FC               	goto	u261
   733                           
   734                           ;AnalogInputs.c: 103: ADCON0bits.GO_DONE = 1;
   735  01FA8C  82C2               	bsf	4034,1,c	;volatile
   736  01FA8E                     l87:
   737  01FA8E  B2C2               	btfsc	4034,1,c	;volatile
   738  01FA90  D7FE               	goto	l87
   739                           
   740                           ;AnalogInputs.c: 106: }
   741                           ;AnalogInputs.c: 107: potiValue = ADRESH;
   742  01FA92  CFC4 F01B          	movff	4036,sequence2@potiValue	;volatile
   743                           
   744                           ;AnalogInputs.c: 108: message[12]='0' + potiValue/100;
   745  01FA96  C01B  F001         	movff	sequence2@potiValue,___awdiv@dividend
   746  01FA9A  6A02               	clrf	___awdiv@dividend+1,c
   747  01FA9C  0E00               	movlw	0
   748  01FA9E  6E04               	movwf	___awdiv@divisor+1,c
   749  01FAA0  0E64               	movlw	100
   750  01FAA2  6E03               	movwf	___awdiv@divisor,c
   751  01FAA4  EC28  F0FE         	call	___awdiv	;wreg free
   752  01FAA8  5001               	movf	?___awdiv,w,c
   753  01FAAA  0F30               	addlw	48
   754  01FAAC  6E17               	movwf	sequence2@message+12,c
   755                           
   756                           ;AnalogInputs.c: 109: potiValue = potiValue % 100;
   757  01FAAE  C01B  F001         	movff	sequence2@potiValue,___awmod@dividend
   758  01FAB2  6A02               	clrf	___awmod@dividend+1,c
   759  01FAB4  0E00               	movlw	0
   760  01FAB6  6E04               	movwf	___awmod@divisor+1,c
   761  01FAB8  0E64               	movlw	100
   762  01FABA  6E03               	movwf	___awmod@divisor,c
   763  01FABC  EC84  F0FD         	call	___awmod	;wreg free
   764  01FAC0  5001               	movf	?___awmod,w,c
   765  01FAC2  6E1B               	movwf	sequence2@potiValue,c
   766                           
   767                           ;AnalogInputs.c: 111: message[13]='0' + potiValue/10;
   768  01FAC4  C01B  F001         	movff	sequence2@potiValue,___awdiv@dividend
   769  01FAC8  6A02               	clrf	___awdiv@dividend+1,c
   770  01FACA  0E00               	movlw	0
   771  01FACC  6E04               	movwf	___awdiv@divisor+1,c
   772  01FACE  0E0A               	movlw	10
   773  01FAD0  6E03               	movwf	___awdiv@divisor,c
   774  01FAD2  EC28  F0FE         	call	___awdiv	;wreg free
   775  01FAD6  5001               	movf	?___awdiv,w,c
   776  01FAD8  0F30               	addlw	48
   777  01FADA  6E18               	movwf	sequence2@message+13,c
   778                           
   779                           ;AnalogInputs.c: 112: message[14]='0' + potiValue%10;
   780  01FADC  C01B  F001         	movff	sequence2@potiValue,___awmod@dividend
   781  01FAE0  6A02               	clrf	___awmod@dividend+1,c
   782  01FAE2  0E00               	movlw	0
   783  01FAE4  6E04               	movwf	___awmod@divisor+1,c
   784  01FAE6  0E0A               	movlw	10
   785  01FAE8  6E03               	movwf	___awmod@divisor,c
   786  01FAEA  EC84  F0FD         	call	___awmod	;wreg free
   787  01FAEE  5001               	movf	?___awmod,w,c
   788  01FAF0  0F30               	addlw	48
   789  01FAF2  6E19               	movwf	sequence2@message+14,c
   790                           
   791                           ;AnalogInputs.c: 114: LcdGoTo(0);
   792  01FAF4  0E00               	movlw	0
   793  01FAF6  ECCD  F0FB         	call	_LcdGoTo
   794                           
   795                           ;AnalogInputs.c: 115: LcdWriteString(message);
   796  01FAFA  0E00               	movlw	high sequence2@message
   797  01FAFC  6E08               	movwf	LcdWriteString@s+1,c
   798  01FAFE  0E0B               	movlw	low sequence2@message
   799  01FB00  6E07               	movwf	LcdWriteString@s,c
   800  01FB02  EC2B  F0FC         	call	_LcdWriteString	;wreg free
   801  01FB06  0012               	return	
   802  01FB08                     __end_of_sequence2:
   803                           	opt stack 0
   804                           tblptru	equ	0xFF8
   805                           tblptrh	equ	0xFF7
   806                           tblptrl	equ	0xFF6
   807                           tablat	equ	0xFF5
   808                           prodl	equ	0xFF3
   809                           postinc0	equ	0xFEE
   810                           wreg	equ	0xFE8
   811                           postinc1	equ	0xFE6
   812                           postdec1	equ	0xFE5
   813                           fsr1l	equ	0xFE1
   814                           postinc2	equ	0xFDE
   815                           status	equ	0xFD8
   816                           
   817 ;; *************** function ___awmod *****************
   818 ;; Defined at:
   819 ;;		line 8 in file "D:\_DevTools\Microchip\xc8\v1.30\sources\common\awmod.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;  dividend        2    0[COMRAM] int 
   822 ;;  divisor         2    2[COMRAM] int 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  sign            1    6[COMRAM] unsigned char 
   825 ;;  counter         1    5[COMRAM] unsigned char 
   826 ;; Return value:  Size  Location     Type
   827 ;;                  2    0[COMRAM] int 
   828 ;; Registers used:
   829 ;;		wreg, status,2, status,0, prodl
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   838 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   839 ;;Total ram usage:        7 bytes
   840 ;; Hardware stack levels used:    1
   841 ;; This function calls:
   842 ;;		Nothing
   843 ;; This function is called by:
   844 ;;		_sequence2
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text4
   849  01FB08                     __ptext4:
   850                           	opt stack 0
   851  01FB08                     ___awmod:
   852                           	opt stack 28
   853                           
   854                           ;incstack = 0
   855  01FB08  6E05               	movwf	??___awmod& (0+255),c
   856  01FB0A  0E00               	movlw	0
   857  01FB0C  6E07               	movwf	___awmod@sign,c
   858  01FB0E  5005               	movf	??___awmod& (0+255),w,c
   859  01FB10  5002               	movf	___awmod@dividend+1,w,c
   860  01FB12  0A80               	xorlw	128
   861  01FB14  6EF3               	movwf	prodl,c
   862  01FB16  0E80               	movlw	128
   863  01FB18  5CF3               	subwf	prodl,w,c
   864  01FB1A  0E00               	movlw	0
   865  01FB1C  B4D8               	btfsc	status,2,c
   866  01FB1E  5C01               	subwf	___awmod@dividend,w,c
   867  01FB20  B0D8               	btfsc	status,0,c
   868  01FB22  D008               	goto	l926
   869  01FB24  6C01               	negf	___awmod@dividend,c
   870  01FB26  1E02               	comf	___awmod@dividend+1,f,c
   871  01FB28  B0D8               	btfsc	status,0,c
   872  01FB2A  2A02               	incf	___awmod@dividend+1,f,c
   873  01FB2C  6E05               	movwf	??___awmod& (0+255),c
   874  01FB2E  0E01               	movlw	1
   875  01FB30  6E07               	movwf	___awmod@sign,c
   876  01FB32  5005               	movf	??___awmod& (0+255),w,c
   877  01FB34                     l926:
   878  01FB34  5004               	movf	___awmod@divisor+1,w,c
   879  01FB36  0A80               	xorlw	128
   880  01FB38  6EF3               	movwf	prodl,c
   881  01FB3A  0E80               	movlw	128
   882  01FB3C  5CF3               	subwf	prodl,w,c
   883  01FB3E  0E00               	movlw	0
   884  01FB40  B4D8               	btfsc	status,2,c
   885  01FB42  5C03               	subwf	___awmod@divisor,w,c
   886  01FB44  B0D8               	btfsc	status,0,c
   887  01FB46  D004               	goto	l930
   888  01FB48  6C03               	negf	___awmod@divisor,c
   889  01FB4A  1E04               	comf	___awmod@divisor+1,f,c
   890  01FB4C  B0D8               	btfsc	status,0,c
   891  01FB4E  2A04               	incf	___awmod@divisor+1,f,c
   892  01FB50                     l930:
   893  01FB50  5004               	movf	___awmod@divisor+1,w,c
   894  01FB52  1003               	iorwf	___awmod@divisor,w,c
   895  01FB54  B4D8               	btfsc	status,2,c
   896  01FB56  D01A               	goto	l946
   897  01FB58  6E05               	movwf	??___awmod& (0+255),c
   898  01FB5A  0E01               	movlw	1
   899  01FB5C  6E06               	movwf	___awmod@counter,c
   900  01FB5E  5005               	movf	??___awmod& (0+255),w,c
   901  01FB60  D004               	goto	l936
   902  01FB62                     l934:
   903  01FB62  90D8               	bcf	status,0,c
   904  01FB64  3603               	rlcf	___awmod@divisor,f,c
   905  01FB66  3604               	rlcf	___awmod@divisor+1,f,c
   906  01FB68  2A06               	incf	___awmod@counter,f,c
   907  01FB6A                     l936:
   908  01FB6A  AE04               	btfss	___awmod@divisor+1,7,c
   909  01FB6C  D7FA               	goto	l934
   910  01FB6E                     l938:
   911  01FB6E  5003               	movf	___awmod@divisor,w,c
   912  01FB70  5C01               	subwf	___awmod@dividend,w,c
   913  01FB72  5004               	movf	___awmod@divisor+1,w,c
   914  01FB74  5802               	subwfb	___awmod@dividend+1,w,c
   915  01FB76  A0D8               	btfss	status,0,c
   916  01FB78  D004               	goto	l942
   917  01FB7A  5003               	movf	___awmod@divisor,w,c
   918  01FB7C  5E01               	subwf	___awmod@dividend,f,c
   919  01FB7E  5004               	movf	___awmod@divisor+1,w,c
   920  01FB80  5A02               	subwfb	___awmod@dividend+1,f,c
   921  01FB82                     l942:
   922  01FB82  90D8               	bcf	status,0,c
   923  01FB84  3204               	rrcf	___awmod@divisor+1,f,c
   924  01FB86  3203               	rrcf	___awmod@divisor,f,c
   925  01FB88  2E06               	decfsz	___awmod@counter,f,c
   926  01FB8A  D7F1               	goto	l938
   927  01FB8C                     l946:
   928  01FB8C  5007               	movf	___awmod@sign,w,c
   929  01FB8E  B4D8               	btfsc	status,2,c
   930  01FB90  D004               	goto	l950
   931  01FB92  6C01               	negf	___awmod@dividend,c
   932  01FB94  1E02               	comf	___awmod@dividend+1,f,c
   933  01FB96  B0D8               	btfsc	status,0,c
   934  01FB98  2A02               	incf	___awmod@dividend+1,f,c
   935  01FB9A                     l950:
   936  01FB9A  C001  F001         	movff	___awmod@dividend,?___awmod
   937  01FB9E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   938  01FBA2  0012               	return	
   939  01FBA4                     __end_of___awmod:
   940                           	opt stack 0
   941                           tblptru	equ	0xFF8
   942                           tblptrh	equ	0xFF7
   943                           tblptrl	equ	0xFF6
   944                           tablat	equ	0xFF5
   945                           prodl	equ	0xFF3
   946                           postinc0	equ	0xFEE
   947                           wreg	equ	0xFE8
   948                           postinc1	equ	0xFE6
   949                           postdec1	equ	0xFE5
   950                           fsr1l	equ	0xFE1
   951                           postinc2	equ	0xFDE
   952                           status	equ	0xFD8
   953                           
   954 ;; *************** function ___awdiv *****************
   955 ;; Defined at:
   956 ;;		line 8 in file "D:\_DevTools\Microchip\xc8\v1.30\sources\common\awdiv.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  dividend        2    0[COMRAM] int 
   959 ;;  divisor         2    2[COMRAM] int 
   960 ;; Auto vars:     Size  Location     Type
   961 ;;  quotient        2    7[COMRAM] int 
   962 ;;  sign            1    6[COMRAM] unsigned char 
   963 ;;  counter         1    5[COMRAM] unsigned char 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  2    0[COMRAM] int 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0, prodl
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   973 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;Total ram usage:        9 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; This function calls:
   980 ;;		Nothing
   981 ;; This function is called by:
   982 ;;		_sequence2
   983 ;;		_sequence3
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text5
   988  01FC50                     __ptext5:
   989                           	opt stack 0
   990  01FC50                     ___awdiv:
   991                           	opt stack 28
   992                           
   993                           ;incstack = 0
   994  01FC50  6E05               	movwf	??___awdiv& (0+255),c
   995  01FC52  0E00               	movlw	0
   996  01FC54  6E07               	movwf	___awdiv@sign,c
   997  01FC56  5005               	movf	??___awdiv& (0+255),w,c
   998  01FC58  5004               	movf	___awdiv@divisor+1,w,c
   999  01FC5A  0A80               	xorlw	128
  1000  01FC5C  6EF3               	movwf	prodl,c
  1001  01FC5E  0E80               	movlw	128
  1002  01FC60  5CF3               	subwf	prodl,w,c
  1003  01FC62  0E00               	movlw	0
  1004  01FC64  B4D8               	btfsc	status,2,c
  1005  01FC66  5C03               	subwf	___awdiv@divisor,w,c
  1006  01FC68  B0D8               	btfsc	status,0,c
  1007  01FC6A  D008               	goto	l882
  1008  01FC6C  6C03               	negf	___awdiv@divisor,c
  1009  01FC6E  1E04               	comf	___awdiv@divisor+1,f,c
  1010  01FC70  B0D8               	btfsc	status,0,c
  1011  01FC72  2A04               	incf	___awdiv@divisor+1,f,c
  1012  01FC74  6E05               	movwf	??___awdiv& (0+255),c
  1013  01FC76  0E01               	movlw	1
  1014  01FC78  6E07               	movwf	___awdiv@sign,c
  1015  01FC7A  5005               	movf	??___awdiv& (0+255),w,c
  1016  01FC7C                     l882:
  1017  01FC7C  5002               	movf	___awdiv@dividend+1,w,c
  1018  01FC7E  0A80               	xorlw	128
  1019  01FC80  6EF3               	movwf	prodl,c
  1020  01FC82  0E80               	movlw	128
  1021  01FC84  5CF3               	subwf	prodl,w,c
  1022  01FC86  0E00               	movlw	0
  1023  01FC88  B4D8               	btfsc	status,2,c
  1024  01FC8A  5C01               	subwf	___awdiv@dividend,w,c
  1025  01FC8C  B0D8               	btfsc	status,0,c
  1026  01FC8E  D006               	goto	l888
  1027  01FC90  6C01               	negf	___awdiv@dividend,c
  1028  01FC92  1E02               	comf	___awdiv@dividend+1,f,c
  1029  01FC94  B0D8               	btfsc	status,0,c
  1030  01FC96  2A02               	incf	___awdiv@dividend+1,f,c
  1031  01FC98  0E01               	movlw	1
  1032  01FC9A  1A07               	xorwf	___awdiv@sign,f,c
  1033  01FC9C                     l888:
  1034  01FC9C  0E00               	movlw	0
  1035  01FC9E  6E09               	movwf	___awdiv@quotient+1,c
  1036  01FCA0  0E00               	movlw	0
  1037  01FCA2  6E08               	movwf	___awdiv@quotient,c
  1038  01FCA4  5004               	movf	___awdiv@divisor+1,w,c
  1039  01FCA6  1003               	iorwf	___awdiv@divisor,w,c
  1040  01FCA8  B4D8               	btfsc	status,2,c
  1041  01FCAA  D01E               	goto	l910
  1042  01FCAC  6E05               	movwf	??___awdiv& (0+255),c
  1043  01FCAE  0E01               	movlw	1
  1044  01FCB0  6E06               	movwf	___awdiv@counter,c
  1045  01FCB2  5005               	movf	??___awdiv& (0+255),w,c
  1046  01FCB4  D004               	goto	l896
  1047  01FCB6                     l894:
  1048  01FCB6  90D8               	bcf	status,0,c
  1049  01FCB8  3603               	rlcf	___awdiv@divisor,f,c
  1050  01FCBA  3604               	rlcf	___awdiv@divisor+1,f,c
  1051  01FCBC  2A06               	incf	___awdiv@counter,f,c
  1052  01FCBE                     l896:
  1053  01FCBE  AE04               	btfss	___awdiv@divisor+1,7,c
  1054  01FCC0  D7FA               	goto	l894
  1055  01FCC2                     l898:
  1056  01FCC2  90D8               	bcf	status,0,c
  1057  01FCC4  3608               	rlcf	___awdiv@quotient,f,c
  1058  01FCC6  3609               	rlcf	___awdiv@quotient+1,f,c
  1059  01FCC8  5003               	movf	___awdiv@divisor,w,c
  1060  01FCCA  5C01               	subwf	___awdiv@dividend,w,c
  1061  01FCCC  5004               	movf	___awdiv@divisor+1,w,c
  1062  01FCCE  5802               	subwfb	___awdiv@dividend+1,w,c
  1063  01FCD0  A0D8               	btfss	status,0,c
  1064  01FCD2  D005               	goto	l906
  1065  01FCD4  5003               	movf	___awdiv@divisor,w,c
  1066  01FCD6  5E01               	subwf	___awdiv@dividend,f,c
  1067  01FCD8  5004               	movf	___awdiv@divisor+1,w,c
  1068  01FCDA  5A02               	subwfb	___awdiv@dividend+1,f,c
  1069  01FCDC  8008               	bsf	___awdiv@quotient,0,c
  1070  01FCDE                     l906:
  1071  01FCDE  90D8               	bcf	status,0,c
  1072  01FCE0  3204               	rrcf	___awdiv@divisor+1,f,c
  1073  01FCE2  3203               	rrcf	___awdiv@divisor,f,c
  1074  01FCE4  2E06               	decfsz	___awdiv@counter,f,c
  1075  01FCE6  D7ED               	goto	l898
  1076  01FCE8                     l910:
  1077  01FCE8  5007               	movf	___awdiv@sign,w,c
  1078  01FCEA  B4D8               	btfsc	status,2,c
  1079  01FCEC  D004               	goto	l914
  1080  01FCEE  6C08               	negf	___awdiv@quotient,c
  1081  01FCF0  1E09               	comf	___awdiv@quotient+1,f,c
  1082  01FCF2  B0D8               	btfsc	status,0,c
  1083  01FCF4  2A09               	incf	___awdiv@quotient+1,f,c
  1084  01FCF6                     l914:
  1085  01FCF6  C008  F001         	movff	___awdiv@quotient,?___awdiv
  1086  01FCFA  C009  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1087  01FCFE  0012               	return	
  1088  01FD00                     __end_of___awdiv:
  1089                           	opt stack 0
  1090                           tblptru	equ	0xFF8
  1091                           tblptrh	equ	0xFF7
  1092                           tblptrl	equ	0xFF6
  1093                           tablat	equ	0xFF5
  1094                           prodl	equ	0xFF3
  1095                           postinc0	equ	0xFEE
  1096                           wreg	equ	0xFE8
  1097                           postinc1	equ	0xFE6
  1098                           postdec1	equ	0xFE5
  1099                           fsr1l	equ	0xFE1
  1100                           postinc2	equ	0xFDE
  1101                           status	equ	0xFD8
  1102                           
  1103 ;; *************** function _LcdWriteString *****************
  1104 ;; Defined at:
  1105 ;;		line 202 in file "lcd.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;  s               2    6[COMRAM] PTR const unsigned char 
  1108 ;;		 -> sequence2@message(16), 
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;		None               void
  1113 ;; Registers used:
  1114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1120 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;Total ram usage:        2 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    3
  1127 ;; This function calls:
  1128 ;;		_LcdChar
  1129 ;; This function is called by:
  1130 ;;		_sequence2
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text6
  1135  01F856                     __ptext6:
  1136                           	opt stack 0
  1137  01F856                     _LcdWriteString:
  1138                           	opt stack 25
  1139                           
  1140                           ;lcd.c: 204: while(*s)
  1141                           
  1142                           ;incstack = 0
  1143  01F856  D009               	goto	l1038
  1144  01F858                     l1034:
  1145                           
  1146                           ;lcd.c: 205: {
  1147                           ;lcd.c: 206: LcdChar(*s++);
  1148  01F858  C007  FFD9         	movff	LcdWriteString@s,fsr2l
  1149  01F85C  C008  FFDA         	movff	LcdWriteString@s+1,fsr2h
  1150  01F860  50DF               	movf	indf2,w,c
  1151  01F862  EC6D  F0FC         	call	_LcdChar
  1152  01F866  4A07               	infsnz	LcdWriteString@s,f,c
  1153  01F868  2A08               	incf	LcdWriteString@s+1,f,c
  1154  01F86A                     l1038:
  1155  01F86A  C007  FFD9         	movff	LcdWriteString@s,fsr2l
  1156  01F86E  C008  FFDA         	movff	LcdWriteString@s+1,fsr2h
  1157  01F872  50DF               	movf	indf2,w,c
  1158  01F874  B4D8               	btfsc	status,2,c
  1159  01F876  0012               	return	
  1160  01F878  D7EF               	goto	l1034
  1161  01F87A                     __end_of_LcdWriteString:
  1162                           	opt stack 0
  1163                           tblptru	equ	0xFF8
  1164                           tblptrh	equ	0xFF7
  1165                           tblptrl	equ	0xFF6
  1166                           tablat	equ	0xFF5
  1167                           prodl	equ	0xFF3
  1168                           postinc0	equ	0xFEE
  1169                           wreg	equ	0xFE8
  1170                           postinc1	equ	0xFE6
  1171                           postdec1	equ	0xFE5
  1172                           fsr1l	equ	0xFE1
  1173                           indf2	equ	0xFDF
  1174                           postinc2	equ	0xFDE
  1175                           fsr2h	equ	0xFDA
  1176                           fsr2l	equ	0xFD9
  1177                           status	equ	0xFD8
  1178                           
  1179 ;; *************** function _LcdChar *****************
  1180 ;; Defined at:
  1181 ;;		line 186 in file "lcd.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;  letter          1    wreg     unsigned char 
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;  letter          1    5[COMRAM] unsigned char 
  1186 ;; Return value:  Size  Location     Type
  1187 ;;		None               void
  1188 ;; Registers used:
  1189 ;;		wreg, status,2, cstack
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1197 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;Total ram usage:        2 bytes
  1200 ;; Hardware stack levels used:    1
  1201 ;; Hardware stack levels required when called:    2
  1202 ;; This function calls:
  1203 ;;		_setGPIO
  1204 ;; This function is called by:
  1205 ;;		_LcdWriteString
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text7
  1210  01F8DA                     __ptext7:
  1211                           	opt stack 0
  1212  01F8DA                     _LcdChar:
  1213                           	opt stack 25
  1214                           
  1215                           ;incstack = 0
  1216                           ;LcdChar@letter stored from wreg
  1217  01F8DA  CFE8 F006          	movff	wreg,LcdChar@letter
  1218                           
  1219                           ;lcd.c: 188: setGPIO(0x12,0x80);
  1220  01F8DE  6E05               	movwf	??_LcdChar& (0+255),c
  1221  01F8E0  0E80               	movlw	128
  1222  01F8E2  6E03               	movwf	setGPIO@value,c
  1223  01F8E4  5005               	movf	??_LcdChar& (0+255),w,c
  1224  01F8E6  0E12               	movlw	18
  1225  01F8E8  EC00  F0FC         	call	_setGPIO
  1226                           
  1227                           ;lcd.c: 190: setGPIO(0x13,letter);
  1228  01F8EC  C006  F003         	movff	LcdChar@letter,setGPIO@value
  1229  01F8F0  0E13               	movlw	19
  1230  01F8F2  EC00  F0FC         	call	_setGPIO
  1231                           
  1232                           ;lcd.c: 192: setGPIO(0x12, 0xc0);
  1233  01F8F6  6E05               	movwf	??_LcdChar& (0+255),c
  1234  01F8F8  0EC0               	movlw	192
  1235  01F8FA  6E03               	movwf	setGPIO@value,c
  1236  01F8FC  5005               	movf	??_LcdChar& (0+255),w,c
  1237  01F8FE  0E12               	movlw	18
  1238  01F900  EC00  F0FC         	call	_setGPIO
  1239                           
  1240                           ;lcd.c: 194: setGPIO(0x12,0x00);
  1241  01F904  6E05               	movwf	??_LcdChar& (0+255),c
  1242  01F906  0E00               	movlw	0
  1243  01F908  6E03               	movwf	setGPIO@value,c
  1244  01F90A  5005               	movf	??_LcdChar& (0+255),w,c
  1245  01F90C  0E12               	movlw	18
  1246  01F90E  EC00  F0FC         	call	_setGPIO
  1247  01F912  0012               	return	
  1248  01F914                     __end_of_LcdChar:
  1249                           	opt stack 0
  1250                           tblptru	equ	0xFF8
  1251                           tblptrh	equ	0xFF7
  1252                           tblptrl	equ	0xFF6
  1253                           tablat	equ	0xFF5
  1254                           prodl	equ	0xFF3
  1255                           postinc0	equ	0xFEE
  1256                           wreg	equ	0xFE8
  1257                           postinc1	equ	0xFE6
  1258                           postdec1	equ	0xFE5
  1259                           fsr1l	equ	0xFE1
  1260                           indf2	equ	0xFDF
  1261                           postinc2	equ	0xFDE
  1262                           fsr2h	equ	0xFDA
  1263                           fsr2l	equ	0xFD9
  1264                           status	equ	0xFD8
  1265                           
  1266 ;; *************** function _LcdGoTo *****************
  1267 ;; Defined at:
  1268 ;;		line 176 in file "lcd.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;  pos             1    wreg     unsigned char 
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;  pos             1    6[COMRAM] unsigned char 
  1273 ;; Return value:  Size  Location     Type
  1274 ;;		None               void
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1286 ;;Total ram usage:        1 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; Hardware stack levels required when called:    3
  1289 ;; This function calls:
  1290 ;;		_lcdCommand
  1291 ;; This function is called by:
  1292 ;;		_sequence2
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           	psect	text8
  1297  01F79A                     __ptext8:
  1298                           	opt stack 0
  1299  01F79A                     _LcdGoTo:
  1300                           	opt stack 25
  1301                           
  1302                           ;incstack = 0
  1303                           ;LcdGoTo@pos stored from wreg
  1304  01F79A  CFE8 F007          	movff	wreg,LcdGoTo@pos
  1305                           
  1306                           ;lcd.c: 179: lcdCommand(0x80+pos);
  1307  01F79E  5007               	movf	LcdGoTo@pos,w,c
  1308  01F7A0  0F80               	addlw	128
  1309  01F7A2  EC50  F0FC         	call	_lcdCommand
  1310  01F7A6  0012               	return	
  1311  01F7A8                     __end_of_LcdGoTo:
  1312                           	opt stack 0
  1313                           tblptru	equ	0xFF8
  1314                           tblptrh	equ	0xFF7
  1315                           tblptrl	equ	0xFF6
  1316                           tablat	equ	0xFF5
  1317                           prodl	equ	0xFF3
  1318                           postinc0	equ	0xFEE
  1319                           wreg	equ	0xFE8
  1320                           postinc1	equ	0xFE6
  1321                           postdec1	equ	0xFE5
  1322                           fsr1l	equ	0xFE1
  1323                           indf2	equ	0xFDF
  1324                           postinc2	equ	0xFDE
  1325                           fsr2h	equ	0xFDA
  1326                           fsr2l	equ	0xFD9
  1327                           status	equ	0xFD8
  1328                           
  1329 ;; *************** function _sequence1 *****************
  1330 ;; Defined at:
  1331 ;;		line 76 in file "AnalogInputs.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;		None
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  potiValue       1    3[COMRAM] unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;		None               void
  1338 ;; Registers used:
  1339 ;;		wreg, status,2, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1349 ;;Total ram usage:        2 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; Hardware stack levels required when called:    1
  1352 ;; This function calls:
  1353 ;;		_Delay10KTCYx
  1354 ;; This function is called by:
  1355 ;;		_main
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text9
  1360  01F838                     __ptext9:
  1361                           	opt stack 0
  1362  01F838                     _sequence1:
  1363                           	opt stack 28
  1364                           
  1365                           ;AnalogInputs.c: 79: byte potiValue = 0;
  1366                           
  1367                           ;incstack = 0
  1368  01F838  6E03               	movwf	??_sequence1& (0+255),c
  1369  01F83A  0E00               	movlw	0
  1370  01F83C  6E04               	movwf	sequence1@potiValue,c
  1371  01F83E  5003               	movf	??_sequence1& (0+255),w,c
  1372                           
  1373                           ;AnalogInputs.c: 82: ADCON0bits.GO_DONE = 1;
  1374  01F840  82C2               	bsf	4034,1,c	;volatile
  1375  01F842                     l79:
  1376  01F842  B2C2               	btfsc	4034,1,c	;volatile
  1377  01F844  D7FE               	goto	l79
  1378                           
  1379                           ;AnalogInputs.c: 85: }
  1380                           ;AnalogInputs.c: 86: potiValue = ADRESH;
  1381  01F846  CFC4 F004          	movff	4036,sequence1@potiValue	;volatile
  1382                           
  1383                           ;AnalogInputs.c: 88: LATD = potiValue;
  1384  01F84A  C004  FF8C         	movff	sequence1@potiValue,3980	;volatile
  1385                           
  1386                           ;AnalogInputs.c: 89: Delay10KTCYx(10);
  1387  01F84E  0E0A               	movlw	10
  1388  01F850  ECE7  F0FB         	call	_Delay10KTCYx
  1389  01F854  0012               	return	
  1390  01F856                     __end_of_sequence1:
  1391                           	opt stack 0
  1392                           tblptru	equ	0xFF8
  1393                           tblptrh	equ	0xFF7
  1394                           tblptrl	equ	0xFF6
  1395                           tablat	equ	0xFF5
  1396                           prodl	equ	0xFF3
  1397                           postinc0	equ	0xFEE
  1398                           wreg	equ	0xFE8
  1399                           postinc1	equ	0xFE6
  1400                           postdec1	equ	0xFE5
  1401                           fsr1l	equ	0xFE1
  1402                           indf2	equ	0xFDF
  1403                           postinc2	equ	0xFDE
  1404                           fsr2h	equ	0xFDA
  1405                           fsr2l	equ	0xFD9
  1406                           status	equ	0xFD8
  1407                           
  1408 ;; *************** function _Delay10KTCYx *****************
  1409 ;; Defined at:
  1410 ;;		line 8 in file "D:\_DevTools\Microchip\xc8\v1.30\sources\pic18\d10ktcyx.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  unit            1    wreg     unsigned char 
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  unit            1    1[COMRAM] unsigned char 
  1415 ;; Return value:  Size  Location     Type
  1416 ;;		None               void
  1417 ;; Registers used:
  1418 ;;		wreg
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1428 ;;Total ram usage:        2 bytes
  1429 ;; Hardware stack levels used:    1
  1430 ;; This function calls:
  1431 ;;		Nothing
  1432 ;; This function is called by:
  1433 ;;		_sequence1
  1434 ;;		_sequence3
  1435 ;;		_sequence4
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text10
  1440  01F7CE                     __ptext10:
  1441                           	opt stack 0
  1442  01F7CE                     _Delay10KTCYx:
  1443                           	opt stack 28
  1444                           
  1445                           ;incstack = 0
  1446                           ;Delay10KTCYx@unit stored from wreg
  1447  01F7CE  CFE8 F002          	movff	wreg,Delay10KTCYx@unit
  1448  01F7D2                     l374:
  1449  01F7D2  0E0D               	movlw	13
  1450  01F7D4  6E01               	movwf	??_Delay10KTCYx& (0+255),c
  1451  01F7D6  0EFC               	movlw	252
  1452  01F7D8                     u287:
  1453  01F7D8  2EE8               	decfsz	wreg,f,c
  1454  01F7DA  D7FE               	goto	u287
  1455  01F7DC  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
  1456  01F7DE  D7FC               	goto	u287
  1457  01F7E0  2E02               	decfsz	Delay10KTCYx@unit,f,c
  1458  01F7E2  D7F7               	goto	l374
  1459  01F7E4  0012               	return	
  1460  01F7E6                     __end_of_Delay10KTCYx:
  1461                           	opt stack 0
  1462                           tblptru	equ	0xFF8
  1463                           tblptrh	equ	0xFF7
  1464                           tblptrl	equ	0xFF6
  1465                           tablat	equ	0xFF5
  1466                           prodl	equ	0xFF3
  1467                           postinc0	equ	0xFEE
  1468                           wreg	equ	0xFE8
  1469                           postinc1	equ	0xFE6
  1470                           postdec1	equ	0xFE5
  1471                           fsr1l	equ	0xFE1
  1472                           indf2	equ	0xFDF
  1473                           postinc2	equ	0xFDE
  1474                           fsr2h	equ	0xFDA
  1475                           fsr2l	equ	0xFD9
  1476                           status	equ	0xFD8
  1477                           
  1478 ;; *************** function _initLEDs *****************
  1479 ;; Defined at:
  1480 ;;		line 47 in file "AnalogInputs.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;		None
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;		None
  1485 ;; Return value:  Size  Location     Type
  1486 ;;		None               void
  1487 ;; Registers used:
  1488 ;;		wreg, status,2
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;Total ram usage:        0 bytes
  1499 ;; Hardware stack levels used:    1
  1500 ;; This function calls:
  1501 ;;		Nothing
  1502 ;; This function is called by:
  1503 ;;		_main
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text11
  1508  01F790                     __ptext11:
  1509                           	opt stack 0
  1510  01F790                     _initLEDs:
  1511                           	opt stack 29
  1512                           
  1513                           ;AnalogInputs.c: 50: TRISD = 0x0;
  1514                           
  1515                           ;incstack = 0
  1516  01F790  0E00               	movlw	0
  1517  01F792  6E95               	movwf	3989,c	;volatile
  1518                           
  1519                           ;AnalogInputs.c: 52: LATD = 0x0;
  1520  01F794  0E00               	movlw	0
  1521  01F796  6E8C               	movwf	3980,c	;volatile
  1522  01F798  0012               	return	
  1523  01F79A                     __end_of_initLEDs:
  1524                           	opt stack 0
  1525                           tblptru	equ	0xFF8
  1526                           tblptrh	equ	0xFF7
  1527                           tblptrl	equ	0xFF6
  1528                           tablat	equ	0xFF5
  1529                           prodl	equ	0xFF3
  1530                           postinc0	equ	0xFEE
  1531                           wreg	equ	0xFE8
  1532                           postinc1	equ	0xFE6
  1533                           postdec1	equ	0xFE5
  1534                           fsr1l	equ	0xFE1
  1535                           indf2	equ	0xFDF
  1536                           postinc2	equ	0xFDE
  1537                           fsr2h	equ	0xFDA
  1538                           fsr2l	equ	0xFD9
  1539                           status	equ	0xFD8
  1540                           
  1541 ;; *************** function _initButtons *****************
  1542 ;; Defined at:
  1543 ;;		line 34 in file "AnalogInputs.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;		None
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;		None
  1548 ;; Return value:  Size  Location     Type
  1549 ;;		None               void
  1550 ;; Registers used:
  1551 ;;		None
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;Total ram usage:        0 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_main
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text12
  1571  01F782                     __ptext12:
  1572                           	opt stack 0
  1573  01F782                     _initButtons:
  1574                           	opt stack 29
  1575                           
  1576                           ;AnalogInputs.c: 37: TRISB0 = 1;
  1577                           
  1578                           ;incstack = 0
  1579  01F782  8093               	bsf	3987,0,c	;volatile
  1580                           
  1581                           ;AnalogInputs.c: 40: TRISA5 = 1;
  1582  01F784  8A92               	bsf	3986,5,c	;volatile
  1583  01F786  0012               	return	
  1584  01F788                     __end_of_initButtons:
  1585                           	opt stack 0
  1586                           tblptru	equ	0xFF8
  1587                           tblptrh	equ	0xFF7
  1588                           tblptrl	equ	0xFF6
  1589                           tablat	equ	0xFF5
  1590                           prodl	equ	0xFF3
  1591                           postinc0	equ	0xFEE
  1592                           wreg	equ	0xFE8
  1593                           postinc1	equ	0xFE6
  1594                           postdec1	equ	0xFE5
  1595                           fsr1l	equ	0xFE1
  1596                           indf2	equ	0xFDF
  1597                           postinc2	equ	0xFDE
  1598                           fsr2h	equ	0xFDA
  1599                           fsr2l	equ	0xFD9
  1600                           status	equ	0xFD8
  1601                           
  1602 ;; *************** function _initAdc *****************
  1603 ;; Defined at:
  1604 ;;		line 58 in file "AnalogInputs.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;		None
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;		None
  1609 ;; Return value:  Size  Location     Type
  1610 ;;		None               void
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1622 ;;Total ram usage:        0 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; This function calls:
  1625 ;;		Nothing
  1626 ;; This function is called by:
  1627 ;;		_main
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           	psect	text13
  1632  01F7BA                     __ptext13:
  1633                           	opt stack 0
  1634  01F7BA                     _initAdc:
  1635                           	opt stack 29
  1636                           
  1637                           ;AnalogInputs.c: 61: TRISA = TRISA | (1<<0);
  1638                           
  1639                           ;incstack = 0
  1640  01F7BA  5092               	movf	3986,w,c	;volatile
  1641  01F7BC  0901               	iorlw	1
  1642  01F7BE  6E92               	movwf	3986,c	;volatile
  1643                           
  1644                           ;AnalogInputs.c: 63: ADCON0 = 0b00000001;
  1645  01F7C0  0E01               	movlw	1
  1646  01F7C2  6EC2               	movwf	4034,c	;volatile
  1647                           
  1648                           ;AnalogInputs.c: 64: ADCON1 = 0b00000000;
  1649  01F7C4  0E00               	movlw	0
  1650  01F7C6  6EC1               	movwf	4033,c	;volatile
  1651                           
  1652                           ;AnalogInputs.c: 65: ADCON2 = 0b00000010;
  1653  01F7C8  0E02               	movlw	2
  1654  01F7CA  6EC0               	movwf	4032,c	;volatile
  1655  01F7CC  0012               	return	
  1656  01F7CE                     __end_of_initAdc:
  1657                           	opt stack 0
  1658                           tblptru	equ	0xFF8
  1659                           tblptrh	equ	0xFF7
  1660                           tblptrl	equ	0xFF6
  1661                           tablat	equ	0xFF5
  1662                           prodl	equ	0xFF3
  1663                           postinc0	equ	0xFEE
  1664                           wreg	equ	0xFE8
  1665                           postinc1	equ	0xFE6
  1666                           postdec1	equ	0xFE5
  1667                           fsr1l	equ	0xFE1
  1668                           indf2	equ	0xFDF
  1669                           postinc2	equ	0xFDE
  1670                           fsr2h	equ	0xFDA
  1671                           fsr2l	equ	0xFD9
  1672                           status	equ	0xFD8
  1673                           
  1674 ;; *************** function _LcdInit *****************
  1675 ;; Defined at:
  1676 ;;		line 123 in file "lcd.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;		None               void
  1683 ;; Registers used:
  1684 ;;		wreg, status,2, status,0, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;Total ram usage:        2 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:    4
  1697 ;; This function calls:
  1698 ;;		_LcdClear
  1699 ;;		_OpenSPI1
  1700 ;;		_lcdCommand
  1701 ;;		_setGPIO
  1702 ;;		_setIODIR
  1703 ;; This function is called by:
  1704 ;;		_main
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           	psect	text14
  1709  01FA10                     __ptext14:
  1710                           	opt stack 0
  1711  01FA10                     _LcdInit:
  1712                           	opt stack 25
  1713                           
  1714                           ;lcd.c: 128: TRISAbits.RA2=0;
  1715                           
  1716                           ;incstack = 0
  1717  01FA10  9492               	bcf	3986,2,c	;volatile
  1718                           
  1719                           ;lcd.c: 129: PORTAbits.RA2=1;
  1720  01FA12  8480               	bsf	3968,2,c	;volatile
  1721                           
  1722                           ;lcd.c: 131: OpenSPI1(0b00000010, 0b00000010, 0b10000000);
  1723  01FA14  6E07               	movwf	??_LcdInit& (0+255),c
  1724  01FA16  0E02               	movlw	2
  1725  01FA18  6E01               	movwf	OpenSPI1@bus_mode,c
  1726  01FA1A  5007               	movf	??_LcdInit& (0+255),w,c
  1727  01FA1C  6E08               	movwf	(??_LcdInit+1)& (0+255),c
  1728  01FA1E  0E80               	movlw	128
  1729  01FA20  6E02               	movwf	OpenSPI1@smp_phase,c
  1730  01FA22  5008               	movf	(??_LcdInit+1)& (0+255),w,c
  1731  01FA24  0E02               	movlw	2
  1732  01FA26  ECDC  F0FC         	call	_OpenSPI1
  1733                           
  1734                           ;lcd.c: 135: setIODIR(0x01,0x00);
  1735  01FA2A  6E07               	movwf	??_LcdInit& (0+255),c
  1736  01FA2C  0E00               	movlw	0
  1737  01FA2E  6E03               	movwf	setIODIR@dir,c
  1738  01FA30  5007               	movf	??_LcdInit& (0+255),w,c
  1739  01FA32  0E01               	movlw	1
  1740  01FA34  EC0E  F0FC         	call	_setIODIR
  1741                           
  1742                           ;lcd.c: 137: setIODIR(0x00,0x00);
  1743  01FA38  6E07               	movwf	??_LcdInit& (0+255),c
  1744  01FA3A  0E00               	movlw	0
  1745  01FA3C  6E03               	movwf	setIODIR@dir,c
  1746  01FA3E  5007               	movf	??_LcdInit& (0+255),w,c
  1747  01FA40  0E00               	movlw	0
  1748  01FA42  EC0E  F0FC         	call	_setIODIR
  1749                           
  1750                           ;lcd.c: 139: setGPIO(0x00,0x00);
  1751  01FA46  6E07               	movwf	??_LcdInit& (0+255),c
  1752  01FA48  0E00               	movlw	0
  1753  01FA4A  6E03               	movwf	setGPIO@value,c
  1754  01FA4C  5007               	movf	??_LcdInit& (0+255),w,c
  1755  01FA4E  0E00               	movlw	0
  1756  01FA50  EC00  F0FC         	call	_setGPIO
  1757                           
  1758                           ;lcd.c: 142: lcdCommand(0b00111111);
  1759  01FA54  0E3F               	movlw	63
  1760  01FA56  EC50  F0FC         	call	_lcdCommand
  1761                           
  1762                           ;lcd.c: 145: lcdCommand(0b00001100);
  1763  01FA5A  0E0C               	movlw	12
  1764  01FA5C  EC50  F0FC         	call	_lcdCommand
  1765                           
  1766                           ;lcd.c: 148: lcdCommand(0b00000001);
  1767  01FA60  0E01               	movlw	1
  1768  01FA62  EC50  F0FC         	call	_lcdCommand
  1769                           
  1770                           ;lcd.c: 151: lcdCommand(0b00000110);
  1771  01FA66  0E06               	movlw	6
  1772  01FA68  EC50  F0FC         	call	_lcdCommand
  1773                           
  1774                           ;lcd.c: 158: LcdClear();
  1775  01FA6C  ECC4  F0FB         	call	_LcdClear	;wreg free
  1776  01FA70  0012               	return	
  1777  01FA72                     __end_of_LcdInit:
  1778                           	opt stack 0
  1779                           tblptru	equ	0xFF8
  1780                           tblptrh	equ	0xFF7
  1781                           tblptrl	equ	0xFF6
  1782                           tablat	equ	0xFF5
  1783                           prodl	equ	0xFF3
  1784                           postinc0	equ	0xFEE
  1785                           wreg	equ	0xFE8
  1786                           postinc1	equ	0xFE6
  1787                           postdec1	equ	0xFE5
  1788                           fsr1l	equ	0xFE1
  1789                           indf2	equ	0xFDF
  1790                           postinc2	equ	0xFDE
  1791                           fsr2h	equ	0xFDA
  1792                           fsr2l	equ	0xFD9
  1793                           status	equ	0xFD8
  1794                           
  1795 ;; *************** function _setIODIR *****************
  1796 ;; Defined at:
  1797 ;;		line 81 in file "lcd.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  address         1    wreg     unsigned char 
  1800 ;;  dir             1    2[COMRAM] unsigned char 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  address         1    3[COMRAM] unsigned char 
  1803 ;; Return value:  Size  Location     Type
  1804 ;;		None               void
  1805 ;; Registers used:
  1806 ;;		wreg, status,2, cstack
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1812 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;Total ram usage:        2 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:    1
  1819 ;; This function calls:
  1820 ;;		_WriteSPI1
  1821 ;; This function is called by:
  1822 ;;		_LcdInit
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           	psect	text15
  1827  01F81C                     __ptext15:
  1828                           	opt stack 0
  1829  01F81C                     _setIODIR:
  1830                           	opt stack 27
  1831                           
  1832                           ;incstack = 0
  1833                           ;setIODIR@address stored from wreg
  1834  01F81C  CFE8 F004          	movff	wreg,setIODIR@address
  1835                           
  1836                           ;lcd.c: 90: PORTAbits.RA2=0;
  1837  01F820  9480               	bcf	3968,2,c	;volatile
  1838                           
  1839                           ;lcd.c: 91: WriteSPI1(0x40);
  1840  01F822  0E40               	movlw	64
  1841  01F824  ECF3  F0FB         	call	_WriteSPI1
  1842                           
  1843                           ;lcd.c: 92: WriteSPI1(address);
  1844  01F828  5004               	movf	setIODIR@address,w,c
  1845  01F82A  ECF3  F0FB         	call	_WriteSPI1
  1846                           
  1847                           ;lcd.c: 93: WriteSPI1(dir);
  1848  01F82E  5003               	movf	setIODIR@dir,w,c
  1849  01F830  ECF3  F0FB         	call	_WriteSPI1
  1850                           
  1851                           ;lcd.c: 94: PORTAbits.RA2=1;
  1852  01F834  8480               	bsf	3968,2,c	;volatile
  1853  01F836  0012               	return	
  1854  01F838                     __end_of_setIODIR:
  1855                           	opt stack 0
  1856                           tblptru	equ	0xFF8
  1857                           tblptrh	equ	0xFF7
  1858                           tblptrl	equ	0xFF6
  1859                           tablat	equ	0xFF5
  1860                           prodl	equ	0xFF3
  1861                           postinc0	equ	0xFEE
  1862                           wreg	equ	0xFE8
  1863                           postinc1	equ	0xFE6
  1864                           postdec1	equ	0xFE5
  1865                           fsr1l	equ	0xFE1
  1866                           indf2	equ	0xFDF
  1867                           postinc2	equ	0xFDE
  1868                           fsr2h	equ	0xFDA
  1869                           fsr2l	equ	0xFD9
  1870                           status	equ	0xFD8
  1871                           
  1872 ;; *************** function _OpenSPI1 *****************
  1873 ;; Defined at:
  1874 ;;		line 13 in file "D:\_DevTools\Microchip\xc8\v1.30\sources\pic18\plib\SPI\spi1open.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;  sync_mode       1    wreg     unsigned char 
  1877 ;;  bus_mode        1    0[COMRAM] unsigned char 
  1878 ;;  smp_phase       1    1[COMRAM] unsigned char 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  sync_mode       1    2[COMRAM] unsigned char 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;		None               void
  1883 ;; Registers used:
  1884 ;;		wreg, status,2, status,0
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1893 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1894 ;;Total ram usage:        3 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; This function calls:
  1897 ;;		Nothing
  1898 ;; This function is called by:
  1899 ;;		_LcdInit
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text16
  1904  01F9B8                     __ptext16:
  1905                           	opt stack 0
  1906  01F9B8                     _OpenSPI1:
  1907                           	opt stack 28
  1908                           
  1909                           ;incstack = 0
  1910                           ;OpenSPI1@sync_mode stored from wreg
  1911  01F9B8  CFE8 F003          	movff	wreg,OpenSPI1@sync_mode
  1912  01F9BC  0E3F               	movlw	63
  1913  01F9BE  16C7               	andwf	4039,f,c	;volatile
  1914  01F9C0  0E00               	movlw	0
  1915  01F9C2  6EC6               	movwf	4038,c	;volatile
  1916  01F9C4  5003               	movf	OpenSPI1@sync_mode,w,c
  1917  01F9C6  12C6               	iorwf	4038,f,c	;volatile
  1918  01F9C8  5002               	movf	OpenSPI1@smp_phase,w,c
  1919  01F9CA  12C7               	iorwf	4039,f,c	;volatile
  1920  01F9CC  D005               	goto	l854
  1921  01F9CE                     l137:
  1922  01F9CE  8CC7               	bsf	4039,6,c	;volatile
  1923  01F9D0  D013               	goto	l858
  1924  01F9D2                     l139:
  1925  01F9D2  8CC7               	bsf	4039,6,c	;volatile
  1926  01F9D4                     l140:
  1927  01F9D4  88C6               	bsf	4038,4,c	;volatile
  1928  01F9D6  D010               	goto	l858
  1929  01F9D8                     l854:
  1930  01F9D8  5001               	movf	OpenSPI1@bus_mode,w,c
  1931                           
  1932                           ; Switch size 1, requested type "space"
  1933                           ; Number of cases is 3, Range of values is 0 to 3
  1934                           ; switch strategies available:
  1935                           ; Name         Instructions Cycles
  1936                           ; simple_byte           10     6 (average)
  1937                           ;	Chosen strategy is simple_byte
  1938  01F9DA  0A00               	xorlw	0	; case 0
  1939  01F9DC  B4D8               	btfsc	status,2,c
  1940  01F9DE  D7F7               	goto	l137
  1941  01F9E0  0A02               	xorlw	2	; case 2
  1942  01F9E2  B4D8               	btfsc	status,2,c
  1943  01F9E4  D7F6               	goto	l139
  1944  01F9E6  0A01               	xorlw	1	; case 3
  1945  01F9E8  B4D8               	btfsc	status,2,c
  1946  01F9EA  D7F4               	goto	l140
  1947  01F9EC  D005               	goto	l858
  1948  01F9EE                     l143:
  1949  01F9EE  8E97               	bsf	3991,7,c	;volatile
  1950  01F9F0                     l145:
  1951  01F9F0  8694               	bsf	3988,3,c	;volatile
  1952  01F9F2  D00A               	goto	l144
  1953  01F9F4                     l146:
  1954  01F9F4  9694               	bcf	3988,3,c	;volatile
  1955  01F9F6  D008               	goto	l144
  1956  01F9F8                     l858:
  1957  01F9F8  5003               	movf	OpenSPI1@sync_mode,w,c
  1958                           
  1959                           ; Switch size 1, requested type "space"
  1960                           ; Number of cases is 2, Range of values is 4 to 5
  1961                           ; switch strategies available:
  1962                           ; Name         Instructions Cycles
  1963                           ; simple_byte            7     4 (average)
  1964                           ;	Chosen strategy is simple_byte
  1965  01F9FA  0A04               	xorlw	4	; case 4
  1966  01F9FC  B4D8               	btfsc	status,2,c
  1967  01F9FE  D7F7               	goto	l143
  1968  01FA00  0A01               	xorlw	1	; case 5
  1969  01FA02  B4D8               	btfsc	status,2,c
  1970  01FA04  D7F5               	goto	l145
  1971  01FA06  D7F6               	goto	l146
  1972  01FA08                     l144:
  1973  01FA08  8894               	bsf	3988,4,c	;volatile
  1974  01FA0A  9A94               	bcf	3988,5,c	;volatile
  1975  01FA0C  8AC6               	bsf	4038,5,c	;volatile
  1976  01FA0E  0012               	return	
  1977  01FA10                     __end_of_OpenSPI1:
  1978                           	opt stack 0
  1979                           tblptru	equ	0xFF8
  1980                           tblptrh	equ	0xFF7
  1981                           tblptrl	equ	0xFF6
  1982                           tablat	equ	0xFF5
  1983                           prodl	equ	0xFF3
  1984                           postinc0	equ	0xFEE
  1985                           wreg	equ	0xFE8
  1986                           postinc1	equ	0xFE6
  1987                           postdec1	equ	0xFE5
  1988                           fsr1l	equ	0xFE1
  1989                           indf2	equ	0xFDF
  1990                           postinc2	equ	0xFDE
  1991                           fsr2h	equ	0xFDA
  1992                           fsr2l	equ	0xFD9
  1993                           status	equ	0xFD8
  1994                           
  1995 ;; *************** function _LcdClear *****************
  1996 ;; Defined at:
  1997 ;;		line 166 in file "lcd.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;		None               void
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2015 ;;Total ram usage:        0 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    3
  2018 ;; This function calls:
  2019 ;;		_lcdCommand
  2020 ;; This function is called by:
  2021 ;;		_LcdInit
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           	psect	text17
  2026  01F788                     __ptext17:
  2027                           	opt stack 0
  2028  01F788                     _LcdClear:
  2029                           	opt stack 25
  2030                           
  2031                           ;lcd.c: 169: lcdCommand(0x01);
  2032                           
  2033                           ;incstack = 0
  2034  01F788  0E01               	movlw	1
  2035  01F78A  EC50  F0FC         	call	_lcdCommand
  2036  01F78E  0012               	return	
  2037  01F790                     __end_of_LcdClear:
  2038                           	opt stack 0
  2039                           tblptru	equ	0xFF8
  2040                           tblptrh	equ	0xFF7
  2041                           tblptrl	equ	0xFF6
  2042                           tablat	equ	0xFF5
  2043                           prodl	equ	0xFF3
  2044                           postinc0	equ	0xFEE
  2045                           wreg	equ	0xFE8
  2046                           postinc1	equ	0xFE6
  2047                           postdec1	equ	0xFE5
  2048                           fsr1l	equ	0xFE1
  2049                           indf2	equ	0xFDF
  2050                           postinc2	equ	0xFDE
  2051                           fsr2h	equ	0xFDA
  2052                           fsr2l	equ	0xFD9
  2053                           status	equ	0xFD8
  2054                           
  2055 ;; *************** function _lcdCommand *****************
  2056 ;; Defined at:
  2057 ;;		line 102 in file "lcd.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  command         1    wreg     unsigned char 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  command         1    5[COMRAM] unsigned char 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;		None               void
  2064 ;; Registers used:
  2065 ;;		wreg, status,2, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2073 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;Total ram usage:        2 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    2
  2078 ;; This function calls:
  2079 ;;		_setGPIO
  2080 ;; This function is called by:
  2081 ;;		_LcdInit
  2082 ;;		_LcdClear
  2083 ;;		_LcdGoTo
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text18
  2088  01F8A0                     __ptext18:
  2089                           	opt stack 0
  2090  01F8A0                     _lcdCommand:
  2091                           	opt stack 25
  2092                           
  2093                           ;incstack = 0
  2094                           ;lcdCommand@command stored from wreg
  2095  01F8A0  CFE8 F006          	movff	wreg,lcdCommand@command
  2096                           
  2097                           ;lcd.c: 104: setGPIO(0x12,0x00);
  2098  01F8A4  6E05               	movwf	??_lcdCommand& (0+255),c
  2099  01F8A6  0E00               	movlw	0
  2100  01F8A8  6E03               	movwf	setGPIO@value,c
  2101  01F8AA  5005               	movf	??_lcdCommand& (0+255),w,c
  2102  01F8AC  0E12               	movlw	18
  2103  01F8AE  EC00  F0FC         	call	_setGPIO
  2104                           
  2105                           ;lcd.c: 106: setGPIO(0x13, command);
  2106  01F8B2  C006  F003         	movff	lcdCommand@command,setGPIO@value
  2107  01F8B6  0E13               	movlw	19
  2108  01F8B8  EC00  F0FC         	call	_setGPIO
  2109                           
  2110                           ;lcd.c: 108: setGPIO(0x12,0x40);
  2111  01F8BC  6E05               	movwf	??_lcdCommand& (0+255),c
  2112  01F8BE  0E40               	movlw	64
  2113  01F8C0  6E03               	movwf	setGPIO@value,c
  2114  01F8C2  5005               	movf	??_lcdCommand& (0+255),w,c
  2115  01F8C4  0E12               	movlw	18
  2116  01F8C6  EC00  F0FC         	call	_setGPIO
  2117                           
  2118                           ;lcd.c: 110: setGPIO(0x12,0x00);
  2119  01F8CA  6E05               	movwf	??_lcdCommand& (0+255),c
  2120  01F8CC  0E00               	movlw	0
  2121  01F8CE  6E03               	movwf	setGPIO@value,c
  2122  01F8D0  5005               	movf	??_lcdCommand& (0+255),w,c
  2123  01F8D2  0E12               	movlw	18
  2124  01F8D4  EC00  F0FC         	call	_setGPIO
  2125  01F8D8  0012               	return	
  2126  01F8DA                     __end_of_lcdCommand:
  2127                           	opt stack 0
  2128                           tblptru	equ	0xFF8
  2129                           tblptrh	equ	0xFF7
  2130                           tblptrl	equ	0xFF6
  2131                           tablat	equ	0xFF5
  2132                           prodl	equ	0xFF3
  2133                           postinc0	equ	0xFEE
  2134                           wreg	equ	0xFE8
  2135                           postinc1	equ	0xFE6
  2136                           postdec1	equ	0xFE5
  2137                           fsr1l	equ	0xFE1
  2138                           indf2	equ	0xFDF
  2139                           postinc2	equ	0xFDE
  2140                           fsr2h	equ	0xFDA
  2141                           fsr2l	equ	0xFD9
  2142                           status	equ	0xFD8
  2143                           
  2144 ;; *************** function _setGPIO *****************
  2145 ;; Defined at:
  2146 ;;		line 55 in file "lcd.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  address         1    wreg     unsigned char 
  2149 ;;  value           1    2[COMRAM] unsigned char 
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;  address         1    3[COMRAM] unsigned char 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;		None               void
  2154 ;; Registers used:
  2155 ;;		wreg, status,2, cstack
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2161 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;Total ram usage:        2 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; Hardware stack levels required when called:    1
  2168 ;; This function calls:
  2169 ;;		_WriteSPI1
  2170 ;; This function is called by:
  2171 ;;		_lcdCommand
  2172 ;;		_LcdInit
  2173 ;;		_LcdChar
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text19
  2178  01F800                     __ptext19:
  2179                           	opt stack 0
  2180  01F800                     _setGPIO:
  2181                           	opt stack 25
  2182                           
  2183                           ;incstack = 0
  2184                           ;setGPIO@address stored from wreg
  2185  01F800  CFE8 F004          	movff	wreg,setGPIO@address
  2186                           
  2187                           ;lcd.c: 66: PORTAbits.RA2=0;
  2188  01F804  9480               	bcf	3968,2,c	;volatile
  2189                           
  2190                           ;lcd.c: 69: WriteSPI1(0x40);
  2191  01F806  0E40               	movlw	64
  2192  01F808  ECF3  F0FB         	call	_WriteSPI1
  2193                           
  2194                           ;lcd.c: 70: WriteSPI1(address);
  2195  01F80C  5004               	movf	setGPIO@address,w,c
  2196  01F80E  ECF3  F0FB         	call	_WriteSPI1
  2197                           
  2198                           ;lcd.c: 71: WriteSPI1(value);
  2199  01F812  5003               	movf	setGPIO@value,w,c
  2200  01F814  ECF3  F0FB         	call	_WriteSPI1
  2201                           
  2202                           ;lcd.c: 72: PORTAbits.RA2=1;
  2203  01F818  8480               	bsf	3968,2,c	;volatile
  2204  01F81A  0012               	return	
  2205  01F81C                     __end_of_setGPIO:
  2206                           	opt stack 0
  2207                           tblptru	equ	0xFF8
  2208                           tblptrh	equ	0xFF7
  2209                           tblptrl	equ	0xFF6
  2210                           tablat	equ	0xFF5
  2211                           prodl	equ	0xFF3
  2212                           postinc0	equ	0xFEE
  2213                           wreg	equ	0xFE8
  2214                           postinc1	equ	0xFE6
  2215                           postdec1	equ	0xFE5
  2216                           fsr1l	equ	0xFE1
  2217                           indf2	equ	0xFDF
  2218                           postinc2	equ	0xFDE
  2219                           fsr2h	equ	0xFDA
  2220                           fsr2l	equ	0xFD9
  2221                           status	equ	0xFD8
  2222                           
  2223 ;; *************** function _WriteSPI1 *****************
  2224 ;; Defined at:
  2225 ;;		line 13 in file "D:\_DevTools\Microchip\xc8\v1.30\sources\pic18\plib\SPI\spi1writ.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;  data_out        1    wreg     unsigned char 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  data_out        1    1[COMRAM] unsigned char 
  2230 ;;  TempVar         1    0[COMRAM] unsigned char 
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  1    wreg      char 
  2233 ;; Registers used:
  2234 ;;		wreg
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2241 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2243 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2244 ;;Total ram usage:        2 bytes
  2245 ;; Hardware stack levels used:    1
  2246 ;; This function calls:
  2247 ;;		Nothing
  2248 ;; This function is called by:
  2249 ;;		_setGPIO
  2250 ;;		_setIODIR
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           	psect	text20
  2255  01F7E6                     __ptext20:
  2256                           	opt stack 0
  2257  01F7E6                     _WriteSPI1:
  2258                           	opt stack 25
  2259                           
  2260                           ;incstack = 0
  2261                           ;WriteSPI1@data_out stored from wreg
  2262  01F7E6  CFE8 F002          	movff	wreg,WriteSPI1@data_out
  2263  01F7EA  CFC9 F001          	movff	4041,WriteSPI1@TempVar	;volatile
  2264  01F7EE  969E               	bcf	3998,3,c	;volatile
  2265  01F7F0  9EC6               	bcf	4038,7,c	;volatile
  2266  01F7F2  C002  FFC9         	movff	WriteSPI1@data_out,4041	;volatile
  2267  01F7F6  BEC6               	btfsc	4038,7,c	;volatile
  2268  01F7F8  D002               	goto	l159
  2269  01F7FA                     l161:
  2270  01F7FA  A69E               	btfss	3998,3,c	;volatile
  2271  01F7FC  D7FE               	goto	l161
  2272  01F7FE                     l159:
  2273  01F7FE  0012               	return	
  2274  01F800                     __end_of_WriteSPI1:
  2275                           	opt stack 0
  2276  0000                     tblptru	equ	0xFF8
  2277                           tblptrh	equ	0xFF7
  2278                           tblptrl	equ	0xFF6
  2279                           tablat	equ	0xFF5
  2280                           prodl	equ	0xFF3
  2281                           postinc0	equ	0xFEE
  2282                           wreg	equ	0xFE8
  2283                           postinc1	equ	0xFE6
  2284                           postdec1	equ	0xFE5
  2285                           fsr1l	equ	0xFE1
  2286                           indf2	equ	0xFDF
  2287                           postinc2	equ	0xFDE
  2288                           fsr2h	equ	0xFDA
  2289                           fsr2l	equ	0xFD9
  2290                           status	equ	0xFD8
  2291                           tblptru	equ	0xFF8
  2292                           tblptrh	equ	0xFF7
  2293                           tblptrl	equ	0xFF6
  2294                           tablat	equ	0xFF5
  2295                           prodl	equ	0xFF3
  2296                           postinc0	equ	0xFEE
  2297                           wreg	equ	0xFE8
  2298                           postinc1	equ	0xFE6
  2299                           postdec1	equ	0xFE5
  2300                           fsr1l	equ	0xFE1
  2301                           indf2	equ	0xFDF
  2302                           postinc2	equ	0xFDE
  2303                           fsr2h	equ	0xFDA
  2304                           fsr2l	equ	0xFD9
  2305                           status	equ	0xFD8
  2306                           
  2307                           	psect	rparam
  2308  0000                     tblptru	equ	0xFF8
  2309                           tblptrh	equ	0xFF7
  2310                           tblptrl	equ	0xFF6
  2311                           tablat	equ	0xFF5
  2312                           prodl	equ	0xFF3
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           postinc1	equ	0xFE6
  2316                           postdec1	equ	0xFE5
  2317                           fsr1l	equ	0xFE1
  2318                           indf2	equ	0xFDF
  2319                           postinc2	equ	0xFDE
  2320                           fsr2h	equ	0xFDA
  2321                           fsr2l	equ	0xFD9
  2322                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     29      47
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    LcdWriteString@s	PTR const unsigned char  size(2) Largest target is 16
		 -> sequence2@message(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _main->_sequence2
    _sequence4->_Delay10KTCYx
    _sequence3->___awdiv
    _sequence2->___awdiv
    _LcdWriteString->_LcdChar
    _LcdChar->_setGPIO
    _LcdGoTo->_lcdCommand
    _sequence1->_Delay10KTCYx
    _LcdInit->_lcdCommand
    _setIODIR->_WriteSPI1
    _LcdClear->_lcdCommand
    _lcdCommand->_setGPIO
    _setGPIO->_WriteSPI1

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4203
                                             27 COMRAM     2     2      0
                            _LcdInit
                            _initAdc
                        _initButtons
                           _initLEDs
                          _sequence1
                          _sequence2
                          _sequence3
                          _sequence4
 ---------------------------------------------------------------------------------
 (1) _sequence4                                            8     8      0     150
                                              2 COMRAM     8     8      0
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (1) _sequence3                                            4     4      0     498
                                              9 COMRAM     4     4      0
                       _Delay10KTCYx
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _sequence2                                           18    18      0    1922
                                              9 COMRAM    18    18      0
                            _LcdGoTo
                     _LcdWriteString
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     367
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     453
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LcdWriteString                                       2     0      2     520
                                              6 COMRAM     2     0      2
                            _LcdChar
 ---------------------------------------------------------------------------------
 (3) _LcdChar                                              2     2      0     447
                                              4 COMRAM     2     2      0
                            _setGPIO
 ---------------------------------------------------------------------------------
 (2) _LcdGoTo                                              1     1      0     462
                                              6 COMRAM     1     1      0
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _sequence1                                            2     2      0      30
                                              2 COMRAM     2     2      0
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initLEDs                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initButtons                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initAdc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LcdInit                                              2     2      0    1603
                                              6 COMRAM     2     2      0
                           _LcdClear
                           _OpenSPI1
                         _lcdCommand
                            _setGPIO
                           _setIODIR
 ---------------------------------------------------------------------------------
 (2) _setIODIR                                             2     1      1     131
                                              2 COMRAM     2     1      1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (2) _OpenSPI1                                             3     1      2     146
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _LcdClear                                             0     0      0     447
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           2     2      0     447
                                              4 COMRAM     2     2      0
                            _setGPIO
 ---------------------------------------------------------------------------------
 (4) _setGPIO                                              2     1      1     432
                                              2 COMRAM     2     1      1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (5) _WriteSPI1                                            2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcdInit
     _LcdClear
       _lcdCommand
         _setGPIO
           _WriteSPI1
     _OpenSPI1
     _lcdCommand
       _setGPIO
         _WriteSPI1
     _setGPIO
       _WriteSPI1
     _setIODIR
       _WriteSPI1
   _initAdc
   _initButtons
   _initLEDs
   _sequence1
     _Delay10KTCYx
   _sequence2
     _LcdGoTo
       _lcdCommand
         _setGPIO
           _WriteSPI1
     _LcdWriteString
       _LcdChar
         _setGPIO
           _WriteSPI1
     ___awdiv
     ___awmod
   _sequence3
     _Delay10KTCYx
     ___awdiv
   _sequence4
     _Delay10KTCYx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1D      2F       1       49.5%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2F       6        0.0%
DATA                 0      0      2F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Thu Apr 10 22:18:50 2014

                     l93 F926                       l79 F842                       l87 FA8E  
                     l99 FBBE             ___awdiv@sign 0007              __CFG_OSC$HS 000000  
                    l140 F9D4                      l143 F9EE                      l144 FA08  
                    l161 F7FA                      l145 F9F0                      l137 F9CE  
                    l146 F9F4                      l139 F9D2                      l159 F7FE  
                    l374 F7D2                      l910 FCE8                      l914 FCF6  
                    l906 FCDE                      l930 FB50                      l854 F9D8  
                    l950 FB9A                      l942 FB82                      l934 FB62  
                    l926 FB34                      l936 FB6A                      l858 F9F8  
                    l882 FC7C                      l938 FB6E                      l946 FB8C  
                    l894 FCB6                      l896 FCBE                      l888 FC9C  
                    l898 FCC2                      u204 FBF2                      u205 FBEE  
                    u234 FC22                      u235 FC1E                      u261 FA84  
                    u174 F954                      u175 F950                      u287 F7D8  
           ___awmod@sign 0007        lcdCommand@command 0006                      wreg 000FE8  
           __CFG_WDT$OFF 000000                     l1020 FC12                     l1024 FC30  
                   l1034 F858                     l1018 FC08                     l1038 F86A  
                   l1080 F976                     l1082 F97C                     l1090 F98C  
                   l1084 F982                     l1086 F988                     _LATD 000F8C  
                   _main F964                     fsr2h 000FDA                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     prodl 000FF3  
                   start 0002          __end_of_LcdChar F914          __end_of_LcdGoTo F7A8  
        __end_of_LcdInit FA72             ?_initButtons 0001                    ?_main 0001  
        __end_of___awdiv FD00          __end_of___awmod FBA4          ___awdiv@divisor 0003  
        ___awdiv@counter 0006                    _TRISA 000F92                    _TRISD 000F95  
  __size_of_Delay10KTCYx 0018           __CFG_FCMEN$OFF 000000          __end_of_initAdc F7CE  
        __end_of_setGPIO F81C                    _state 002E                    tablat 000FF5  
                  status 000FD8         __end_of_LcdClear F790          __initialization F87A  
           __end_of_main F9B8             _Delay10KTCYx F7CE         __end_of_OpenSPI1 FA10  
                 ??_main 001C            __activetblptr 000003                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
       ___awdiv@dividend 0001                ??_LcdChar 0005                ??_LcdGoTo 0007  
              ??_LcdInit 0007                   _TRISB0 007C98                   _TRISA5 007C95  
       OpenSPI1@bus_mode 0001                ??___awdiv 0005                ??___awmod 0005  
       __end_of_initLEDs F79A         __end_of_setIODIR F838              setIODIR@dir 0003  
       ___awdiv@quotient 0008          ___awmod@divisor 0003          ___awmod@counter 0006  
              ??_initAdc 0001             __pdataCOMRAM 001E                ??_setGPIO 0004  
          LcdChar@letter 0006                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization F89A  
__size_of_LcdWriteString 0024       __size_of_WriteSPI1 001A           __pcstackCOMRAM 0001  
   __size_of_initButtons 0006                ?_LcdClear 0001         WriteSPI1@TempVar 0001  
              ?_OpenSPI1 0001               _lcdCommand F8A0        __end_of_WriteSPI1 F800  
     __size_of_sequence1 001E       __size_of_sequence2 0096       __size_of_sequence3 0050  
     __size_of_sequence4 00AC               ??_LcdClear 0007                  _SSP1BUF 000FC9  
              ?_initLEDs 0001                  _LcdChar F8DA                  _LcdGoTo F79A  
                _LcdInit FA10                ?_setIODIR 0003               ??_OpenSPI1 0003  
                __Hparam 0000                  __Lparam 0000                  ___awdiv FC50  
                ___awmod FB08         sequence2@message 000B                  __pcinit F87A  
                __ramtop 1000                  __ptext0 F964                  __ptext1 FBA4  
                __ptext2 F914                  __ptext3 FA72                  __ptext4 FB08  
                __ptext5 FC50                  __ptext6 F856                  __ptext7 F8DA  
                __ptext8 F79A                  __ptext9 F838                  _initAdc F7BA  
                _setGPIO F800         ___awmod@dividend 0001          setIODIR@address 0004  
           setGPIO@value 0003     end_of_initialization F89A               ??_initLEDs 0001  
         _LcdWriteString F856               ??_setIODIR 0004        OpenSPI1@smp_phase 0002  
      __end_of_sequence1 F856        __end_of_sequence2 FB08        __end_of_sequence3 F964  
      __end_of_sequence4 FC50                  postdec1 000FE5              ?_lcdCommand 0001  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
      OpenSPI1@sync_mode 0003                _PORTAbits 000F80                _TRISAbits 000F92  
              _TRISCbits 000F94                _TRISFbits 000F97   __end_of_LcdWriteString F87A  
          __pidataCOMRAM F7A8      start_initialization F87A          ?_LcdWriteString 0007  
      __size_of_LcdClear 0008      __size_of_lcdCommand 003A        __size_of_OpenSPI1 0058  
          ??_initButtons 0001                _WriteSPI1 F7E6                 ?_LcdChar 0001  
               ?_LcdGoTo 0001                 ?_LcdInit 0001        __size_of_initLEDs 000A  
      WriteSPI1@data_out 0002        __size_of_setIODIR 001C       sequence1@potiValue 0004  
               ?___awdiv 0001                 ?___awmod 0001            ?_Delay10KTCYx 0001  
     sequence2@potiValue 001B      __end_of_initButtons F788                 ?_initAdc 0001  
               ?_setGPIO 0003               ?_WriteSPI1 0001       sequence3@potiValue 000D  
     sequence4@potiValue 0005                 _PIR1bits 000F9E           setGPIO@address 0004  
           ??_lcdCommand 0005           ??_Delay10KTCYx 0001                _sequence1 F838  
              _sequence2 FA72                _sequence3 F914                _sequence4 FBA4  
               _SSP1CON1 000FC6               sequence3@i 000C               sequence4@i 0009  
             sequence4@j 0006                 _SSP1STAT 000FC7               _ADCON0bits 000FC2  
               _LcdClear F788         Delay10KTCYx@unit 0002                copy_data0 F88E  
     __end_of_lcdCommand F8DA         __size_of_LcdChar 003A         __size_of_LcdGoTo 000E  
       __size_of_LcdInit 0062                 _OpenSPI1 F9B8                 __Hrparam 0000  
               __Lrparam 0000               ?_sequence1 0001               ?_sequence2 0001  
             ?_sequence3 0001               ?_sequence4 0001              _initButtons F782  
       __size_of___awdiv 00B0         __size_of___awmod 009C         ??_LcdWriteString 0009  
      sequence4@ledValue 0008         __size_of_initAdc 0014           sequence2@F7300 001E  
       __size_of_setGPIO 001C              ??_WriteSPI1 0001                 __ptext10 F7CE  
               __ptext11 F790                 __ptext20 F7E6                 __ptext12 F782  
               __ptext13 F7BA                 __ptext14 FA10                 __ptext15 F81C  
               __ptext16 F9B8                 __ptext17 F788                 __ptext18 F8A0  
               __ptext19 F800             _SSP1CON1bits 000FC6                 _initLEDs F790  
               _setIODIR F81C            __size_of_main 0054          LcdWriteString@s 0007  
           _SSP1STATbits 000FC7     __end_of_Delay10KTCYx F7E6               LcdGoTo@pos 0007  
            ??_sequence1 0003              ??_sequence2 000A              ??_sequence3 000A  
            ??_sequence4 0003  
