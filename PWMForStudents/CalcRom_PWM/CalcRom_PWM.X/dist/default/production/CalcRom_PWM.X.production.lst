

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Apr 10 18:41:20 2019

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           ; Version 1.41 (B)
    24                           ; Generated 21/02/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F8722 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     _ADRESH	set	4036
    58  0000                     _ADCON0bits	set	4034
    59  0000                     _ADCON2	set	4032
    60  0000                     _ADCON1	set	4033
    61  0000                     _PR2	set	4043
    62  0000                     _INTCON2bits	set	4081
    63  0000                     _INTCONbits	set	4082
    64  0000                     _ADCON0	set	4034
    65  0000                     _TRISA	set	3986
    66  0000                     _PIR1bits	set	3998
    67  0000                     _T2CON	set	4042
    68  0000                     _CCPR3L	set	4024
    69  0000                     _CCPR2L	set	4027
    70  0000                     _CCPR1L	set	4030
    71  0000                     _CCP3CON	set	4023
    72  0000                     _CCP2CON	set	4026
    73  0000                     _CCP1CON	set	4029
    74  0000                     _TRISGbits	set	3992
    75  0000                     _TRISCbits	set	3988
    76                           
    77                           ; #config settings
    78  0000                     
    79                           	psect	cinit
    80  0002EE                     __pcinit:
    81                           	opt stack 0
    82  0002EE                     start_initialization:
    83                           	opt stack 0
    84  0002EE                     __initialization:
    85                           	opt stack 0
    86                           
    87                           ; Clear objects allocated to COMRAM (1 bytes)
    88  0002EE  6A19               	clrf	__pbssCOMRAM& (0+255),c
    89  0002F0                     end_of_initialization:
    90                           	opt stack 0
    91  0002F0                     __end_of__initialization:
    92                           	opt stack 0
    93  0002F0  901A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    94  0002F2  921A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    95  0002F4  0100               	movlb	0
    96  0002F6  EF6D  F001         	goto	_main	;jump to C main() function
    97                           
    98                           	psect	bssCOMRAM
    99  000019                     __pbssCOMRAM:
   100                           	opt stack 0
   101  000019                     intrerupt_ext@tempValue:
   102                           	opt stack 0
   103  000019                     	ds	1
   104                           
   105                           	psect	cstackCOMRAM
   106  000001                     __pcstackCOMRAM:
   107                           	opt stack 0
   108  000001                     i2setPeriod@period:
   109                           	opt stack 0
   110                           
   111                           ; 1 bytes @ 0x0
   112  000001                     	ds	1
   113  000002                     ??_intrerupt_ext:
   114                           
   115                           ; 1 bytes @ 0x1
   116  000002                     	ds	14
   117  000010                     setDuty@duty:
   118                           	opt stack 0
   119  000010                     setPeriod@period:
   120                           	opt stack 0
   121  000010                     delay@j:
   122                           	opt stack 0
   123  000010                     Adc_GetMess@Value:
   124                           	opt stack 0
   125                           
   126                           ; 2 bytes @ 0xF
   127  000010                     	ds	1
   128  000011                     setDuty@chanId:
   129                           	opt stack 0
   130                           
   131                           ; 1 bytes @ 0x10
   132  000011                     	ds	1
   133  000012                     ??_delay:
   134                           
   135                           ; 1 bytes @ 0x11
   136  000012                     	ds	3
   137  000015                     delay@i:
   138                           	opt stack 0
   139                           
   140                           ; 1 bytes @ 0x14
   141  000015                     	ds	1
   142  000016                     LedControl5@potiValue:
   143                           	opt stack 0
   144                           
   145                           ; 1 bytes @ 0x15
   146  000016                     	ds	1
   147  000017                     LedControl5@i:
   148                           	opt stack 0
   149                           
   150                           ; 2 bytes @ 0x16
   151  000017                     	ds	2
   152  000019                     
   153                           ; 1 bytes @ 0x18
   154 ;;
   155 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   156 ;;
   157 ;; *************** function _main *****************
   158 ;; Defined at:
   159 ;;		line 35 in file "../main.c"
   160 ;; Parameters:    Size  Location     Type
   161 ;;		None
   162 ;; Auto vars:     Size  Location     Type
   163 ;;		None
   164 ;; Return value:  Size  Location     Type
   165 ;;                  1    wreg      void 
   166 ;; Registers used:
   167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   168 ;; Tracked objects:
   169 ;;		On entry : 0/0
   170 ;;		On exit  : 0/0
   171 ;;		Unchanged: 0/0
   172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   177 ;;Total ram usage:        0 bytes
   178 ;; Hardware stack levels required when called:    4
   179 ;; This function calls:
   180 ;;		_InteruptInit
   181 ;;		_LedControl5
   182 ;;		_PwmInit
   183 ;;		_setPeriod
   184 ;; This function is called by:
   185 ;;		Startup code after reset
   186 ;; This function uses a non-reentrant model
   187 ;;
   188                           
   189                           	psect	text0
   190  0002DA                     __ptext0:
   191                           	opt stack 0
   192  0002DA                     _main:
   193                           	opt stack 27
   194                           
   195                           ;main.c: 38: PwmInit();
   196                           
   197                           ;incstack = 0
   198  0002DA  EC15  F001         	call	_PwmInit	;wreg free
   199                           
   200                           ;main.c: 39: InteruptInit();
   201  0002DE  EC7D  F001         	call	_InteruptInit	;wreg free
   202                           
   203                           ;main.c: 40: setPeriod(0xFF);
   204  0002E2  0EFF               	movlw	255
   205  0002E4  EC82  F001         	call	_setPeriod
   206  0002E8                     l1290:
   207                           
   208                           ;main.c: 42: {
   209                           ;main.c: 43: LedControl5();
   210  0002E8  EC09  F000         	call	_LedControl5	;wreg free
   211  0002EC  D7FD               	goto	l1290
   212  0002EE                     __end_of_main:
   213                           	opt stack 0
   214                           
   215 ;; *************** function _setPeriod *****************
   216 ;; Defined at:
   217 ;;		line 71 in file "../Pwm.c"
   218 ;; Parameters:    Size  Location     Type
   219 ;;  period          1    wreg     unsigned char 
   220 ;; Auto vars:     Size  Location     Type
   221 ;;  period          1   15[COMRAM] unsigned char 
   222 ;; Return value:  Size  Location     Type
   223 ;;                  1    wreg      void 
   224 ;; Registers used:
   225 ;;		wreg
   226 ;; Tracked objects:
   227 ;;		On entry : 0/0
   228 ;;		On exit  : 0/0
   229 ;;		Unchanged: 0/0
   230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   234 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   235 ;;Total ram usage:        1 bytes
   236 ;; Hardware stack levels used:    1
   237 ;; Hardware stack levels required when called:    2
   238 ;; This function calls:
   239 ;;		Nothing
   240 ;; This function is called by:
   241 ;;		_main
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           	psect	text1
   246  000304                     __ptext1:
   247                           	opt stack 0
   248  000304                     _setPeriod:
   249                           	opt stack 28
   250                           
   251                           ;incstack = 0
   252                           ;setPeriod@period stored from wreg
   253  000304  6E10               	movwf	setPeriod@period,c
   254                           
   255                           ;Pwm.c: 73: PR2 = period;
   256  000306  C010  FFCB         	movff	setPeriod@period,4043	;volatile
   257  00030A  0012               	return		;funcret
   258  00030C                     __end_of_setPeriod:
   259                           	opt stack 0
   260                           
   261 ;; *************** function _PwmInit *****************
   262 ;; Defined at:
   263 ;;		line 15 in file "../Pwm.c"
   264 ;; Parameters:    Size  Location     Type
   265 ;;		None
   266 ;; Auto vars:     Size  Location     Type
   267 ;;		None
   268 ;; Return value:  Size  Location     Type
   269 ;;                  1    wreg      void 
   270 ;; Registers used:
   271 ;;		wreg, status,2, status,0
   272 ;; Tracked objects:
   273 ;;		On entry : 0/0
   274 ;;		On exit  : 0/0
   275 ;;		Unchanged: 0/0
   276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   281 ;;Total ram usage:        0 bytes
   282 ;; Hardware stack levels used:    1
   283 ;; Hardware stack levels required when called:    2
   284 ;; This function calls:
   285 ;;		Nothing
   286 ;; This function is called by:
   287 ;;		_main
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291                           	psect	text2
   292  00022A                     __ptext2:
   293                           	opt stack 0
   294  00022A                     _PwmInit:
   295                           	opt stack 28
   296                           
   297                           ;Pwm.c: 17: TRISCbits.RC2=1;
   298                           
   299                           ;incstack = 0
   300  00022A  8494               	bsf	3988,2,c	;volatile
   301                           
   302                           ;Pwm.c: 18: TRISCbits.RC1=1;
   303  00022C  8294               	bsf	3988,1,c	;volatile
   304                           
   305                           ;Pwm.c: 19: TRISGbits.RG0=1;
   306  00022E  8098               	bsf	3992,0,c	;volatile
   307                           
   308                           ;Pwm.c: 21: CCP1CON=0b00001100;
   309  000230  0E0C               	movlw	12
   310  000232  6EBD               	movwf	4029,c	;volatile
   311                           
   312                           ;Pwm.c: 22: CCP2CON=0b00001100;
   313  000234  0E0C               	movlw	12
   314  000236  6EBA               	movwf	4026,c	;volatile
   315                           
   316                           ;Pwm.c: 23: CCP3CON=0b00001100;
   317  000238  0E0C               	movlw	12
   318  00023A  6EB7               	movwf	4023,c	;volatile
   319                           
   320                           ;Pwm.c: 25: CCPR1L=0x00;
   321  00023C  0E00               	movlw	0
   322  00023E  6EBE               	movwf	4030,c	;volatile
   323                           
   324                           ;Pwm.c: 26: CCPR2L=0x00;
   325  000240  0E00               	movlw	0
   326  000242  6EBB               	movwf	4027,c	;volatile
   327                           
   328                           ;Pwm.c: 27: CCPR3L=0x00;
   329  000244  0E00               	movlw	0
   330  000246  6EB8               	movwf	4024,c	;volatile
   331                           
   332                           ;Pwm.c: 29: T2CON=0b00000101;
   333  000248  0E05               	movlw	5
   334  00024A  6ECA               	movwf	4042,c	;volatile
   335  00024C                     l37:
   336  00024C  A29E               	btfss	3998,1,c	;volatile
   337  00024E  D7FE               	goto	l37
   338                           
   339                           ;Pwm.c: 32: TRISCbits.RC2=0;
   340  000250  9494               	bcf	3988,2,c	;volatile
   341                           
   342                           ;Pwm.c: 33: TRISCbits.RC1=0;
   343  000252  9294               	bcf	3988,1,c	;volatile
   344                           
   345                           ;Pwm.c: 34: TRISGbits.RG0=0;
   346  000254  9098               	bcf	3992,0,c	;volatile
   347                           
   348                           ;Pwm.c: 36: TRISA = TRISA | (1<<0);
   349  000256  5092               	movf	3986,w,c	;volatile
   350  000258  0901               	iorlw	1
   351  00025A  6E92               	movwf	3986,c	;volatile
   352                           
   353                           ;Pwm.c: 38: ADCON0 = 0b00000001;
   354  00025C  0E01               	movlw	1
   355  00025E  6EC2               	movwf	4034,c	;volatile
   356  000260  0012               	return		;funcret
   357  000262                     __end_of_PwmInit:
   358                           	opt stack 0
   359                           
   360 ;; *************** function _LedControl5 *****************
   361 ;; Defined at:
   362 ;;		line 203 in file "../Pwm.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;  i               2   22[COMRAM] int 
   367 ;;  potiValue       1   21[COMRAM] unsigned char 
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   378 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   380 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   381 ;;Total ram usage:        3 bytes
   382 ;; Hardware stack levels used:    1
   383 ;; Hardware stack levels required when called:    3
   384 ;; This function calls:
   385 ;;		_Adc_GetMess
   386 ;;		_delay
   387 ;;		_setDuty
   388 ;; This function is called by:
   389 ;;		_main
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393                           	psect	text3
   394  000012                     __ptext3:
   395                           	opt stack 0
   396  000012                     _LedControl5:
   397                           	opt stack 27
   398                           
   399                           ;Pwm.c: 205: uint8 potiValue = 0;
   400                           
   401                           ;incstack = 0
   402  000012  0E00               	movlw	0
   403  000014  6E16               	movwf	LedControl5@potiValue,c
   404                           
   405                           ;Pwm.c: 208: Adc_GetMess(&potiValue);
   406  000016  0E16               	movlw	low LedControl5@potiValue
   407  000018  6E10               	movwf	Adc_GetMess@Value,c
   408  00001A  0E00               	movlw	high LedControl5@potiValue
   409  00001C  6E11               	movwf	Adc_GetMess@Value+1,c
   410  00001E  EC5D  F001         	call	_Adc_GetMess	;wreg free
   411                           
   412                           ;Pwm.c: 210: if( potiValue <= 85){
   413  000022  0E56               	movlw	86
   414  000024  6016               	cpfslt	LedControl5@potiValue,c
   415  000026  D042               	goto	l1090
   416                           
   417                           ;Pwm.c: 211: setDuty(verde, 0);
   418  000028  0E00               	movlw	0
   419  00002A  6E10               	movwf	setDuty@duty,c
   420  00002C  0E01               	movlw	1
   421  00002E  EC31  F001         	call	_setDuty
   422                           
   423                           ;Pwm.c: 212: for(i=255; i>=0; i-- )
   424  000032  0E00               	movlw	0
   425  000034  6E18               	movwf	LedControl5@i+1,c
   426  000036  6817               	setf	LedControl5@i,c
   427  000038                     l1064:
   428  000038  BE18               	btfsc	LedControl5@i+1,7,c
   429  00003A  D00F               	goto	l1074
   430                           
   431                           ;Pwm.c: 213: {
   432                           ;Pwm.c: 214: setDuty(rosu, i);
   433  00003C  C017  F010         	movff	LedControl5@i,setDuty@duty
   434  000040  0E02               	movlw	2
   435  000042  EC31  F001         	call	_setDuty
   436                           
   437                           ;Pwm.c: 215: delay(20);
   438  000046  0E00               	movlw	0
   439  000048  6E11               	movwf	delay@j+1,c
   440  00004A  0E14               	movlw	20
   441  00004C  6E10               	movwf	delay@j,c
   442  00004E  EC47  F001         	call	_delay	;wreg free
   443  000052  0617               	decf	LedControl5@i,f,c
   444  000054  A0D8               	btfss	status,0,c
   445  000056  0618               	decf	LedControl5@i+1,f,c
   446  000058  D7EF               	goto	l1064
   447  00005A                     l1074:
   448                           
   449                           ;Pwm.c: 216: }
   450                           ;Pwm.c: 218: setDuty(albastru, 0);
   451  00005A  0E00               	movlw	0
   452  00005C  6E10               	movwf	setDuty@duty,c
   453  00005E  0E00               	movlw	0
   454  000060  EC31  F001         	call	_setDuty
   455                           
   456                           ;Pwm.c: 219: delay(50);
   457  000064  0E00               	movlw	0
   458  000066  6E11               	movwf	delay@j+1,c
   459  000068  0E32               	movlw	50
   460  00006A  6E10               	movwf	delay@j,c
   461  00006C  EC47  F001         	call	_delay	;wreg free
   462                           
   463                           ;Pwm.c: 220: for(i=0; i<=255; i++ )
   464  000070  0E00               	movlw	0
   465  000072  6E18               	movwf	LedControl5@i+1,c
   466  000074  0E00               	movlw	0
   467  000076  6E17               	movwf	LedControl5@i,c
   468  000078                     l1078:
   469  000078  BE18               	btfsc	LedControl5@i+1,7,c
   470  00007A  D003               	goto	l1082
   471  00007C  0418               	decf	LedControl5@i+1,w,c
   472  00007E  B0D8               	btfsc	status,0,c
   473  000080  D00E               	goto	l1088
   474  000082                     l1082:
   475                           
   476                           ;Pwm.c: 221: {
   477                           ;Pwm.c: 222: setDuty(verde, i);
   478  000082  C017  F010         	movff	LedControl5@i,setDuty@duty
   479  000086  0E01               	movlw	1
   480  000088  EC31  F001         	call	_setDuty
   481                           
   482                           ;Pwm.c: 223: delay(20);
   483  00008C  0E00               	movlw	0
   484  00008E  6E11               	movwf	delay@j+1,c
   485  000090  0E14               	movlw	20
   486  000092  6E10               	movwf	delay@j,c
   487  000094  EC47  F001         	call	_delay	;wreg free
   488  000098  4A17               	infsnz	LedControl5@i,f,c
   489  00009A  2A18               	incf	LedControl5@i+1,f,c
   490  00009C  D7ED               	goto	l1078
   491  00009E                     l1088:
   492                           
   493                           ;Pwm.c: 224: }
   494                           ;Pwm.c: 226: delay(50);
   495  00009E  0E00               	movlw	0
   496  0000A0  6E11               	movwf	delay@j+1,c
   497  0000A2  0E32               	movlw	50
   498  0000A4  6E10               	movwf	delay@j,c
   499  0000A6  EC47  F001         	call	_delay	;wreg free
   500                           
   501                           ;Pwm.c: 229: }
   502  0000AA  0012               	return	
   503  0000AC                     l1090:
   504                           
   505                           ;Pwm.c: 231: else if ( potiValue <= 170)
   506  0000AC  0EAB               	movlw	171
   507  0000AE  6016               	cpfslt	LedControl5@potiValue,c
   508  0000B0  D03B               	goto	l1122
   509                           
   510                           ;Pwm.c: 232: {
   511                           ;Pwm.c: 233: setDuty(rosu, 0);
   512  0000B2  0E00               	movlw	0
   513  0000B4  6E10               	movwf	setDuty@duty,c
   514  0000B6  0E02               	movlw	2
   515  0000B8  EC31  F001         	call	_setDuty
   516                           
   517                           ;Pwm.c: 234: for(i=255; i>=0; i-- )
   518  0000BC  0E00               	movlw	0
   519  0000BE  6E18               	movwf	LedControl5@i+1,c
   520  0000C0  6817               	setf	LedControl5@i,c
   521  0000C2                     l1096:
   522  0000C2  BE18               	btfsc	LedControl5@i+1,7,c
   523  0000C4  D00F               	goto	l1106
   524                           
   525                           ;Pwm.c: 235: {setDuty(verde, i);
   526  0000C6  C017  F010         	movff	LedControl5@i,setDuty@duty
   527  0000CA  0E01               	movlw	1
   528  0000CC  EC31  F001         	call	_setDuty
   529                           
   530                           ;Pwm.c: 236: delay(20);
   531  0000D0  0E00               	movlw	0
   532  0000D2  6E11               	movwf	delay@j+1,c
   533  0000D4  0E14               	movlw	20
   534  0000D6  6E10               	movwf	delay@j,c
   535  0000D8  EC47  F001         	call	_delay	;wreg free
   536  0000DC  0617               	decf	LedControl5@i,f,c
   537  0000DE  A0D8               	btfss	status,0,c
   538  0000E0  0618               	decf	LedControl5@i+1,f,c
   539  0000E2  D7EF               	goto	l1096
   540  0000E4                     l1106:
   541                           
   542                           ;Pwm.c: 237: }
   543                           ;Pwm.c: 239: setDuty(verde, 0);
   544  0000E4  0E00               	movlw	0
   545  0000E6  6E10               	movwf	setDuty@duty,c
   546  0000E8  0E01               	movlw	1
   547  0000EA  EC31  F001         	call	_setDuty
   548                           
   549                           ;Pwm.c: 240: for(i=0; i<=255; i++ )
   550  0000EE  0E00               	movlw	0
   551  0000F0  6E18               	movwf	LedControl5@i+1,c
   552  0000F2  0E00               	movlw	0
   553  0000F4  6E17               	movwf	LedControl5@i,c
   554  0000F6                     l1110:
   555  0000F6  BE18               	btfsc	LedControl5@i+1,7,c
   556  0000F8  D003               	goto	l1114
   557  0000FA  0418               	decf	LedControl5@i+1,w,c
   558  0000FC  B0D8               	btfsc	status,0,c
   559  0000FE  D00E               	goto	l1120
   560  000100                     l1114:
   561                           
   562                           ;Pwm.c: 241: {setDuty(albastru, i);
   563  000100  C017  F010         	movff	LedControl5@i,setDuty@duty
   564  000104  0E00               	movlw	0
   565  000106  EC31  F001         	call	_setDuty
   566                           
   567                           ;Pwm.c: 242: delay(20);
   568  00010A  0E00               	movlw	0
   569  00010C  6E11               	movwf	delay@j+1,c
   570  00010E  0E14               	movlw	20
   571  000110  6E10               	movwf	delay@j,c
   572  000112  EC47  F001         	call	_delay	;wreg free
   573  000116  4A17               	infsnz	LedControl5@i,f,c
   574  000118  2A18               	incf	LedControl5@i+1,f,c
   575  00011A  D7ED               	goto	l1110
   576  00011C                     l1120:
   577                           
   578                           ;Pwm.c: 243: }
   579                           ;Pwm.c: 245: setDuty(albastru, 0);
   580  00011C  0E00               	movlw	0
   581  00011E  6E10               	movwf	setDuty@duty,c
   582  000120  0E00               	movlw	0
   583  000122  EC31  F001         	call	_setDuty
   584                           
   585                           ;Pwm.c: 246: }
   586  000126  0012               	return	
   587  000128                     l1122:
   588                           
   589                           ;Pwm.c: 247: else
   590                           ;Pwm.c: 248: {
   591                           ;Pwm.c: 250: setDuty(verde, 0);
   592  000128  0E00               	movlw	0
   593  00012A  6E10               	movwf	setDuty@duty,c
   594  00012C  0E01               	movlw	1
   595  00012E  EC31  F001         	call	_setDuty
   596                           
   597                           ;Pwm.c: 252: for(i=0; i<=255; i++ )
   598  000132  0E00               	movlw	0
   599  000134  6E18               	movwf	LedControl5@i+1,c
   600  000136  0E00               	movlw	0
   601  000138  6E17               	movwf	LedControl5@i,c
   602  00013A                     l1126:
   603  00013A  BE18               	btfsc	LedControl5@i+1,7,c
   604  00013C  D003               	goto	l1130
   605  00013E  0418               	decf	LedControl5@i+1,w,c
   606  000140  B0D8               	btfsc	status,0,c
   607  000142  D00E               	goto	l1136
   608  000144                     l1130:
   609                           
   610                           ;Pwm.c: 253: {setDuty(rosu, i);
   611  000144  C017  F010         	movff	LedControl5@i,setDuty@duty
   612  000148  0E02               	movlw	2
   613  00014A  EC31  F001         	call	_setDuty
   614                           
   615                           ;Pwm.c: 254: delay(20);
   616  00014E  0E00               	movlw	0
   617  000150  6E11               	movwf	delay@j+1,c
   618  000152  0E14               	movlw	20
   619  000154  6E10               	movwf	delay@j,c
   620  000156  EC47  F001         	call	_delay	;wreg free
   621  00015A  4A17               	infsnz	LedControl5@i,f,c
   622  00015C  2A18               	incf	LedControl5@i+1,f,c
   623  00015E  D7ED               	goto	l1126
   624  000160                     l1136:
   625                           
   626                           ;Pwm.c: 255: }
   627                           ;Pwm.c: 257: setDuty(rosu, 0);
   628  000160  0E00               	movlw	0
   629  000162  6E10               	movwf	setDuty@duty,c
   630  000164  0E02               	movlw	2
   631  000166  EC31  F001         	call	_setDuty
   632                           
   633                           ;Pwm.c: 259: for(i=255; i>=0; i-- )
   634  00016A  0E00               	movlw	0
   635  00016C  6E18               	movwf	LedControl5@i+1,c
   636  00016E  6817               	setf	LedControl5@i,c
   637  000170                     l1140:
   638  000170  BE18               	btfsc	LedControl5@i+1,7,c
   639  000172  0012               	return	
   640                           
   641                           ;Pwm.c: 260: {setDuty(albastru, i);
   642  000174  C017  F010         	movff	LedControl5@i,setDuty@duty
   643  000178  0E00               	movlw	0
   644  00017A  EC31  F001         	call	_setDuty
   645                           
   646                           ;Pwm.c: 261: delay(20);
   647  00017E  0E00               	movlw	0
   648  000180  6E11               	movwf	delay@j+1,c
   649  000182  0E14               	movlw	20
   650  000184  6E10               	movwf	delay@j,c
   651  000186  EC47  F001         	call	_delay	;wreg free
   652  00018A  0617               	decf	LedControl5@i,f,c
   653  00018C  A0D8               	btfss	status,0,c
   654  00018E  0618               	decf	LedControl5@i+1,f,c
   655  000190  D7EF               	goto	l1140
   656  000192                     __end_of_LedControl5:
   657                           	opt stack 0
   658                           status	equ	0xFD8
   659                           
   660 ;; *************** function _setDuty *****************
   661 ;; Defined at:
   662 ;;		line 49 in file "../Pwm.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;  chanId          1    wreg     unsigned char 
   665 ;;  duty            1   15[COMRAM] unsigned char 
   666 ;; Auto vars:     Size  Location     Type
   667 ;;  chanId          1   16[COMRAM] unsigned char 
   668 ;; Return value:  Size  Location     Type
   669 ;;                  1    wreg      void 
   670 ;; Registers used:
   671 ;;		wreg, status,2, status,0
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   677 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   678 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   680 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   681 ;;Total ram usage:        2 bytes
   682 ;; Hardware stack levels used:    1
   683 ;; Hardware stack levels required when called:    2
   684 ;; This function calls:
   685 ;;		Nothing
   686 ;; This function is called by:
   687 ;;		_LedControl5
   688 ;;		_LedControl
   689 ;;		_LedControl2
   690 ;;		_LedControl3
   691 ;;		_LedControl4
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           	psect	text4
   696  000262                     __ptext4:
   697                           	opt stack 0
   698  000262                     _setDuty:
   699                           	opt stack 27
   700                           
   701                           ;incstack = 0
   702                           ;setDuty@chanId stored from wreg
   703  000262  6E11               	movwf	setDuty@chanId,c
   704                           
   705                           ;Pwm.c: 51: switch(chanId)
   706  000264  D009               	goto	l1040
   707  000266                     l47:
   708                           
   709                           ;Pwm.c: 54: {
   710                           ;Pwm.c: 55: CCPR1L = duty;
   711  000266  C010  FFBE         	movff	setDuty@duty,4030	;volatile
   712                           
   713                           ;Pwm.c: 56: break;
   714  00026A  0012               	return	
   715  00026C                     l49:
   716                           
   717                           ;Pwm.c: 59: {
   718                           ;Pwm.c: 60: CCPR2L = duty;
   719  00026C  C010  FFBB         	movff	setDuty@duty,4027	;volatile
   720                           
   721                           ;Pwm.c: 61: break;
   722  000270  0012               	return	
   723  000272                     l50:
   724                           
   725                           ;Pwm.c: 64: {
   726                           ;Pwm.c: 65: CCPR3L = duty;
   727  000272  C010  FFB8         	movff	setDuty@duty,4024	;volatile
   728                           
   729                           ;Pwm.c: 67: }
   730                           ;Pwm.c: 68: }
   731                           
   732                           ;Pwm.c: 66: break;
   733  000276  0012               	return	
   734  000278                     l1040:
   735  000278  5011               	movf	setDuty@chanId,w,c
   736                           
   737                           ; Switch size 1, requested type "space"
   738                           ; Number of cases is 3, Range of values is 0 to 2
   739                           ; switch strategies available:
   740                           ; Name         Instructions Cycles
   741                           ; simple_byte           10     6 (average)
   742                           ;	Chosen strategy is simple_byte
   743  00027A  0A00               	xorlw	0	; case 0
   744  00027C  B4D8               	btfsc	status,2,c
   745  00027E  D7F3               	goto	l47
   746  000280  0A01               	xorlw	1	; case 1
   747  000282  B4D8               	btfsc	status,2,c
   748  000284  D7F3               	goto	l49
   749  000286  0A03               	xorlw	3	; case 2
   750  000288  A4D8               	btfss	status,2,c
   751  00028A  0012               	return	
   752  00028C  D7F2               	goto	l50
   753  00028E                     __end_of_setDuty:
   754                           	opt stack 0
   755                           status	equ	0xFD8
   756                           
   757 ;; *************** function _delay *****************
   758 ;; Defined at:
   759 ;;		line 80 in file "../Pwm.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;  j               2   15[COMRAM] int 
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  i               1   20[COMRAM] unsigned char 
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		wreg, status,2, status,0
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   773 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   776 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   777 ;;Total ram usage:        6 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; Hardware stack levels required when called:    2
   780 ;; This function calls:
   781 ;;		Nothing
   782 ;; This function is called by:
   783 ;;		_LedControl5
   784 ;;		_LedControl
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text5
   789  00028E                     __ptext5:
   790                           	opt stack 0
   791  00028E                     _delay:
   792                           	opt stack 27
   793                           
   794                           ;Pwm.c: 81: uint8 i;
   795                           ;Pwm.c: 82: for (i=0; i<j; i++) {
   796                           
   797                           ;incstack = 0
   798  00028E  0E00               	movlw	0
   799  000290  6E15               	movwf	delay@i,c
   800  000292  D005               	goto	l60
   801  000294                     l1044:
   802                           
   803                           ;Pwm.c: 83: _delay(500);
   804  000294  0EA6               	movlw	166
   805  000296                     u727:
   806  000296  2EE8               	decfsz	wreg,f,c
   807  000298  D7FE               	bra	u727
   808  00029A  D000               	nop2	
   809  00029C  2A15               	incf	delay@i,f,c
   810  00029E                     l60:
   811  00029E  5015               	movf	delay@i,w,c
   812  0002A0  6E12               	movwf	??_delay& (0+255),c
   813  0002A2  6A13               	clrf	(??_delay+1)& (0+255),c
   814  0002A4  5010               	movf	delay@j,w,c
   815  0002A6  5C12               	subwf	??_delay,w,c
   816  0002A8  5013               	movf	??_delay+1,w,c
   817  0002AA  0A80               	xorlw	128
   818  0002AC  6E14               	movwf	(??_delay+2)& (0+255),c
   819  0002AE  5011               	movf	delay@j+1,w,c
   820  0002B0  0A80               	xorlw	128
   821  0002B2  5814               	subwfb	(??_delay+2)& (0+255),w,c
   822  0002B4  B0D8               	btfsc	status,0,c
   823  0002B6  0012               	return	
   824  0002B8  D7ED               	goto	l1044
   825  0002BA                     __end_of_delay:
   826                           	opt stack 0
   827                           wreg	equ	0xFE8
   828                           status	equ	0xFD8
   829                           
   830 ;; *************** function _Adc_GetMess *****************
   831 ;; Defined at:
   832 ;;		line 5 in file "../Adc_1.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;  Value           2   15[COMRAM] PTR unsigned char 
   835 ;;		 -> LedControl5@potiValue(1), LedControl4@potiValue(1), LedControl3@potiValue(1), LedControl2@potiValue(1), 
   836 ;; Auto vars:     Size  Location     Type
   837 ;;		None
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		wreg, fsr2l, fsr2h, status,2
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   847 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   850 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;Total ram usage:        2 bytes
   852 ;; Hardware stack levels used:    1
   853 ;; Hardware stack levels required when called:    2
   854 ;; This function calls:
   855 ;;		Nothing
   856 ;; This function is called by:
   857 ;;		_LedControl5
   858 ;;		_LedControl2
   859 ;;		_LedControl3
   860 ;;		_LedControl4
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           	psect	text6
   865  0002BA                     __ptext6:
   866                           	opt stack 0
   867  0002BA                     _Adc_GetMess:
   868                           	opt stack 27
   869                           
   870                           ;Adc_1.c: 7: ADCON0 = 0b00000001;
   871                           
   872                           ;incstack = 0
   873  0002BA  0E01               	movlw	1
   874  0002BC  6EC2               	movwf	4034,c	;volatile
   875                           
   876                           ;Adc_1.c: 8: ADCON1 = 0b00001110;
   877  0002BE  0E0E               	movlw	14
   878  0002C0  6EC1               	movwf	4033,c	;volatile
   879                           
   880                           ;Adc_1.c: 9: ADCON2 = 0b00111010;
   881  0002C2  0E3A               	movlw	58
   882  0002C4  6EC0               	movwf	4032,c	;volatile
   883                           
   884                           ;Adc_1.c: 10: ADCON0bits.GO = 1;
   885  0002C6  82C2               	bsf	4034,1,c	;volatile
   886  0002C8                     l151:
   887  0002C8  B2C2               	btfsc	4034,1,c	;volatile
   888  0002CA  D7FE               	goto	l151
   889                           
   890                           ;Adc_1.c: 14: }
   891                           ;Adc_1.c: 16: *Value = ADRESH;
   892  0002CC  C010  FFD9         	movff	Adc_GetMess@Value,fsr2l
   893  0002D0  C011  FFDA         	movff	Adc_GetMess@Value+1,fsr2h
   894  0002D4  CFC4 FFDF          	movff	4036,indf2	;volatile
   895  0002D8  0012               	return		;funcret
   896  0002DA                     __end_of_Adc_GetMess:
   897                           	opt stack 0
   898                           wreg	equ	0xFE8
   899                           indf2	equ	0xFDF
   900                           fsr2h	equ	0xFDA
   901                           fsr2l	equ	0xFD9
   902                           status	equ	0xFD8
   903                           
   904 ;; *************** function _InteruptInit *****************
   905 ;; Defined at:
   906 ;;		line 41 in file "../Pwm.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;		None
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		None
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;Total ram usage:        0 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; Hardware stack levels required when called:    2
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_main
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text7
   935  0002FA                     __ptext7:
   936                           	opt stack 0
   937  0002FA                     _InteruptInit:
   938                           	opt stack 28
   939                           
   940                           ;Pwm.c: 43: INTCONbits.GIE=1;
   941                           
   942                           ;incstack = 0
   943  0002FA  8EF2               	bsf	intcon,7,c	;volatile
   944                           
   945                           ;Pwm.c: 44: INTCONbits.INT0IE=1;
   946  0002FC  88F2               	bsf	intcon,4,c	;volatile
   947                           
   948                           ;Pwm.c: 45: INTCONbits.INT0IF=0;
   949  0002FE  92F2               	bcf	intcon,1,c	;volatile
   950                           
   951                           ;Pwm.c: 46: INTCON2bits.INTEDG0=1;
   952  000300  8CF1               	bsf	intcon2,6,c	;volatile
   953  000302  0012               	return		;funcret
   954  000304                     __end_of_InteruptInit:
   955                           	opt stack 0
   956                           intcon	equ	0xFF2
   957                           intcon2	equ	0xFF1
   958                           wreg	equ	0xFE8
   959                           indf2	equ	0xFDF
   960                           fsr2h	equ	0xFDA
   961                           fsr2l	equ	0xFD9
   962                           status	equ	0xFD8
   963                           
   964 ;; *************** function _intrerupt_ext *****************
   965 ;; Defined at:
   966 ;;		line 15 in file "../main.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;		None
   969 ;; Auto vars:     Size  Location     Type
   970 ;;		None
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      void 
   973 ;; Registers used:
   974 ;;		wreg, status,2, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;Total ram usage:       14 bytes
   985 ;; Hardware stack levels used:    1
   986 ;; Hardware stack levels required when called:    1
   987 ;; This function calls:
   988 ;;		i2_setPeriod
   989 ;; This function is called by:
   990 ;;		Interrupt level 2
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           	psect	intcode
   995  000008                     __pintcode:
   996                           	opt stack 0
   997  000008                     _intrerupt_ext:
   998                           	opt stack 27
   999                           
  1000                           ;incstack = 0
  1001  000008  821A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1002  00000A  EDC9  F000         	call	int_func,f	;refresh shadow registers
  1003                           intcon	equ	0xFF2
  1004                           intcon2	equ	0xFF1
  1005                           wreg	equ	0xFE8
  1006                           indf2	equ	0xFDF
  1007                           fsr2h	equ	0xFDA
  1008                           fsr2l	equ	0xFD9
  1009                           status	equ	0xFD8
  1010                           
  1011                           	psect	intcode_body
  1012  000192                     __pintcode_body:
  1013                           	opt stack 27
  1014  000192                     int_func:
  1015                           	opt stack 27
  1016  000192  0006               	pop		; remove dummy address from shadow register refresh
  1017  000194  CFFA F002          	movff	pclath,??_intrerupt_ext
  1018  000198  CFFB F003          	movff	pclatu,??_intrerupt_ext+1
  1019  00019C  CFE9 F004          	movff	fsr0l,??_intrerupt_ext+2
  1020  0001A0  CFEA F005          	movff	fsr0h,??_intrerupt_ext+3
  1021  0001A4  CFE1 F006          	movff	fsr1l,??_intrerupt_ext+4
  1022  0001A8  CFE2 F007          	movff	fsr1h,??_intrerupt_ext+5
  1023  0001AC  CFD9 F008          	movff	fsr2l,??_intrerupt_ext+6
  1024  0001B0  CFDA F009          	movff	fsr2h,??_intrerupt_ext+7
  1025  0001B4  CFF3 F00A          	movff	prodl,??_intrerupt_ext+8
  1026  0001B8  CFF4 F00B          	movff	prodh,??_intrerupt_ext+9
  1027  0001BC  CFF6 F00C          	movff	tblptrl,??_intrerupt_ext+10
  1028  0001C0  CFF7 F00D          	movff	tblptrh,??_intrerupt_ext+11
  1029  0001C4  CFF8 F00E          	movff	tblptru,??_intrerupt_ext+12
  1030  0001C8  CFF5 F00F          	movff	tablat,??_intrerupt_ext+13
  1031                           
  1032                           ;main.c: 17: static uint8 tempValue = 0;
  1033                           ;main.c: 19: if(INTCONbits.INT0IE && INTCONbits.INT0IF)
  1034  0001CC  B8F2               	btfsc	intcon,4,c	;volatile
  1035  0001CE  A2F2               	btfss	intcon,1,c	;volatile
  1036  0001D0  D00E               	goto	i2l132
  1037                           
  1038                           ;main.c: 20: {
  1039                           ;main.c: 21: if(tempValue == 0)
  1040  0001D2  5019               	movf	intrerupt_ext@tempValue,w,c
  1041  0001D4  A4D8               	btfss	status,2,c
  1042  0001D6  D005               	goto	i2l1278
  1043                           
  1044                           ;main.c: 22: {
  1045                           ;main.c: 23: setPeriod(0x7D);
  1046  0001D8  0E7D               	movlw	125
  1047  0001DA  EC86  F001         	call	i2_setPeriod
  1048                           
  1049                           ;main.c: 24: tempValue = 1;
  1050  0001DE  0E01               	movlw	1
  1051  0001E0  D004               	goto	L1
  1052  0001E2                     i2l1278:
  1053                           
  1054                           ;main.c: 26: else
  1055                           ;main.c: 27: {
  1056                           ;main.c: 28: setPeriod(0xFF);
  1057  0001E2  0EFF               	movlw	255
  1058  0001E4  EC86  F001         	call	i2_setPeriod
  1059                           
  1060                           ;main.c: 29: tempValue = 0;
  1061  0001E8  0E00               	movlw	0
  1062  0001EA                     L1:
  1063  0001EA  6E19               	movwf	intrerupt_ext@tempValue,c
  1064                           
  1065                           ;main.c: 30: }
  1066                           ;main.c: 31: INTCONbits.INT0IF = 0;
  1067  0001EC  92F2               	bcf	intcon,1,c	;volatile
  1068  0001EE                     i2l132:
  1069  0001EE  C00F  FFF5         	movff	??_intrerupt_ext+13,tablat
  1070  0001F2  C00E  FFF8         	movff	??_intrerupt_ext+12,tblptru
  1071  0001F6  C00D  FFF7         	movff	??_intrerupt_ext+11,tblptrh
  1072  0001FA  C00C  FFF6         	movff	??_intrerupt_ext+10,tblptrl
  1073  0001FE  C00B  FFF4         	movff	??_intrerupt_ext+9,prodh
  1074  000202  C00A  FFF3         	movff	??_intrerupt_ext+8,prodl
  1075  000206  C009  FFDA         	movff	??_intrerupt_ext+7,fsr2h
  1076  00020A  C008  FFD9         	movff	??_intrerupt_ext+6,fsr2l
  1077  00020E  C007  FFE2         	movff	??_intrerupt_ext+5,fsr1h
  1078  000212  C006  FFE1         	movff	??_intrerupt_ext+4,fsr1l
  1079  000216  C005  FFEA         	movff	??_intrerupt_ext+3,fsr0h
  1080  00021A  C004  FFE9         	movff	??_intrerupt_ext+2,fsr0l
  1081  00021E  C003  FFFB         	movff	??_intrerupt_ext+1,pclatu
  1082  000222  C002  FFFA         	movff	??_intrerupt_ext,pclath
  1083  000226  921A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1084  000228  0011               	retfie		f
  1085  00022A                     __end_of_intrerupt_ext:
  1086                           	opt stack 0
  1087                           pclatu	equ	0xFFB
  1088                           pclath	equ	0xFFA
  1089                           tblptru	equ	0xFF8
  1090                           tblptrh	equ	0xFF7
  1091                           tblptrl	equ	0xFF6
  1092                           tablat	equ	0xFF5
  1093                           prodh	equ	0xFF4
  1094                           prodl	equ	0xFF3
  1095                           intcon	equ	0xFF2
  1096                           intcon2	equ	0xFF1
  1097                           fsr0h	equ	0xFEA
  1098                           fsr0l	equ	0xFE9
  1099                           wreg	equ	0xFE8
  1100                           fsr1h	equ	0xFE2
  1101                           fsr1l	equ	0xFE1
  1102                           indf2	equ	0xFDF
  1103                           fsr2h	equ	0xFDA
  1104                           fsr2l	equ	0xFD9
  1105                           status	equ	0xFD8
  1106                           
  1107 ;; *************** function i2_setPeriod *****************
  1108 ;; Defined at:
  1109 ;;		line 71 in file "../Pwm.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;  period          1    wreg     unsigned char 
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;  period          1    0[COMRAM] unsigned char 
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1126 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1127 ;;Total ram usage:        1 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; This function calls:
  1130 ;;		Nothing
  1131 ;; This function is called by:
  1132 ;;		_intrerupt_ext
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text9
  1137  00030C                     __ptext9:
  1138                           	opt stack 0
  1139  00030C                     i2_setPeriod:
  1140                           	opt stack 27
  1141                           
  1142                           ;incstack = 0
  1143                           ;i2setPeriod@period stored from wreg
  1144  00030C  6E01               	movwf	i2setPeriod@period,c
  1145                           
  1146                           ;Pwm.c: 73: PR2 = period;
  1147  00030E  C001  FFCB         	movff	i2setPeriod@period,4043	;volatile
  1148  000312  0012               	return		;funcret
  1149  000314                     __end_ofi2_setPeriod:
  1150                           	opt stack 0
  1151  0000                     pclatu	equ	0xFFB
  1152                           pclath	equ	0xFFA
  1153                           tblptru	equ	0xFF8
  1154                           tblptrh	equ	0xFF7
  1155                           tblptrl	equ	0xFF6
  1156                           tablat	equ	0xFF5
  1157                           prodh	equ	0xFF4
  1158                           prodl	equ	0xFF3
  1159                           intcon	equ	0xFF2
  1160                           intcon2	equ	0xFF1
  1161                           fsr0h	equ	0xFEA
  1162                           fsr0l	equ	0xFE9
  1163                           wreg	equ	0xFE8
  1164                           fsr1h	equ	0xFE2
  1165                           fsr1l	equ	0xFE1
  1166                           indf2	equ	0xFDF
  1167                           fsr2h	equ	0xFDA
  1168                           fsr2l	equ	0xFD9
  1169                           status	equ	0xFD8
  1170                           pclatu	equ	0xFFB
  1171                           pclath	equ	0xFFA
  1172                           tblptru	equ	0xFF8
  1173                           tblptrh	equ	0xFF7
  1174                           tblptrl	equ	0xFF6
  1175                           tablat	equ	0xFF5
  1176                           prodh	equ	0xFF4
  1177                           prodl	equ	0xFF3
  1178                           intcon	equ	0xFF2
  1179                           intcon2	equ	0xFF1
  1180                           fsr0h	equ	0xFEA
  1181                           fsr0l	equ	0xFE9
  1182                           wreg	equ	0xFE8
  1183                           fsr1h	equ	0xFE2
  1184                           fsr1l	equ	0xFE1
  1185                           indf2	equ	0xFDF
  1186                           fsr2h	equ	0xFDA
  1187                           fsr2l	equ	0xFD9
  1188                           status	equ	0xFD8
  1189                           
  1190                           	psect	rparam
  1191  0000                     pclatu	equ	0xFFB
  1192                           pclath	equ	0xFFA
  1193                           tblptru	equ	0xFF8
  1194                           tblptrh	equ	0xFF7
  1195                           tblptrl	equ	0xFF6
  1196                           tablat	equ	0xFF5
  1197                           prodh	equ	0xFF4
  1198                           prodl	equ	0xFF3
  1199                           intcon	equ	0xFF2
  1200                           intcon2	equ	0xFF1
  1201                           fsr0h	equ	0xFEA
  1202                           fsr0l	equ	0xFE9
  1203                           wreg	equ	0xFE8
  1204                           fsr1h	equ	0xFE2
  1205                           fsr1l	equ	0xFE1
  1206                           indf2	equ	0xFDF
  1207                           fsr2h	equ	0xFDA
  1208                           fsr2l	equ	0xFD9
  1209                           status	equ	0xFD8
  1210                           
  1211                           	psect	temp
  1212  00001A                     btemp:
  1213                           	opt stack 0
  1214  00001A                     	ds	1
  1215  0000                     int$flags	set	btemp
  1216                           pclatu	equ	0xFFB
  1217                           pclath	equ	0xFFA
  1218                           tblptru	equ	0xFF8
  1219                           tblptrh	equ	0xFF7
  1220                           tblptrl	equ	0xFF6
  1221                           tablat	equ	0xFF5
  1222                           prodh	equ	0xFF4
  1223                           prodl	equ	0xFF3
  1224                           intcon	equ	0xFF2
  1225                           intcon2	equ	0xFF1
  1226                           fsr0h	equ	0xFEA
  1227                           fsr0l	equ	0xFE9
  1228                           wreg	equ	0xFE8
  1229                           fsr1h	equ	0xFE2
  1230                           fsr1l	equ	0xFE1
  1231                           indf2	equ	0xFDF
  1232                           fsr2h	equ	0xFDA
  1233                           fsr2l	equ	0xFD9
  1234                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     24      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    Adc_GetMess@Value	PTR unsigned char  size(2) Largest target is 1
		 -> LedControl5@potiValue(COMRAM[1]), LedControl4@potiValue(COMRAM[1]), LedControl3@potiValue(COMRAM[1]), LedControl2@potiValue(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_LedControl5
    _LedControl5->_delay

Critical Paths under _intrerupt_ext in COMRAM

    _intrerupt_ext->i2_setPeriod

Critical Paths under _main in BANK0

    None.

Critical Paths under _intrerupt_ext in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _intrerupt_ext in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _intrerupt_ext in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _intrerupt_ext in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _intrerupt_ext in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _intrerupt_ext in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _intrerupt_ext in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _intrerupt_ext in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _intrerupt_ext in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _intrerupt_ext in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _intrerupt_ext in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _intrerupt_ext in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _intrerupt_ext in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _intrerupt_ext in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _intrerupt_ext in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _intrerupt_ext in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4552
                       _InteruptInit
                        _LedControl5
                            _PwmInit
                          _setPeriod
 ---------------------------------------------------------------------------------
 (1) _setPeriod                                            1     1      0      15
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LedControl5                                          3     3      0    4537
                                             21 COMRAM     3     3      0
                        _Adc_GetMess
                              _delay
                            _setDuty
 ---------------------------------------------------------------------------------
 (2) _setDuty                                              2     1      1    2520
                                             15 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _delay                                                6     4      2    1262
                                             15 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _Adc_GetMess                                          2     0      2     278
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _InteruptInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _intrerupt_ext                                       14    14      0      22
                                              1 COMRAM    14    14      0
                        i2_setPeriod
 ---------------------------------------------------------------------------------
 (4) i2_setPeriod                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InteruptInit
   _LedControl5
     _Adc_GetMess
     _delay
     _setDuty
   _PwmInit
   _setPeriod

 _intrerupt_ext (ROOT)
   i2_setPeriod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     18      19       1       26.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19      32        0.0%
DATA                 0      0      19       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Apr 10 18:41:20 2019

    __end_ofi2_setPeriod 0314                       l50 0272                       l60 029E  
                     l37 024C                       l47 0266                       l49 026C  
            __CFG_OSC$HS 000000                      l151 02C8                      _PR2 000FCB  
                    u727 0296                      wreg 000FE8             __CFG_LVP$OFF 000000  
    __end_of_LedControl5 0192             __CFG_WDT$OFF 000000                     l1110 00F6  
                   l1040 0278                     l1120 011C                     l1130 0144  
                   l1114 0100                     l1106 00E4                     l1122 0128  
                   l1044 0294                     l1140 0170                     l1126 013A  
                   l1136 0160                     l1064 0038                     l1082 0082  
                   l1074 005A                     l1090 00AC                     l1078 0078  
                   l1096 00C2                     l1088 009E                     l1290 02E8  
                   _main 02DA                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 001A  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
          __CFG_IESO$OFF 000000    __end_of_intrerupt_ext 022A            __CFG_MCLRE$ON 000000  
           ___param_bank 000000          __end_of_PwmInit 0262                    ?_main 0001  
                  _T2CON 000FCA                    i2l132 01EE                    _TRISA 000F92  
          __CFG_PWRT$OFF 000000           __CFG_FCMEN$OFF 000000                    _delay 028E  
        __end_of_setDuty 028E           __CFG_BOREN$OFF 000000                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8              i2_setPeriod 030C  
        __initialization 02EE             __end_of_main 02EE   intrerupt_ext@tempValue 0019  
                 ??_main 0019            __activetblptr 000003              _LedControl5 0012  
                 ?_delay 0010                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _CCPR1L 000FBE  
                 _CCPR2L 000FBB                   _CCPR3L 000FB8                   i2l1278 01E2  
          ?_InteruptInit 0001           __CFG_XINST$OFF 000000                ??_PwmInit 0010  
                 delay@i 0015                   delay@j 0010                ??_setDuty 0011  
           ?_Adc_GetMess 0010                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8           ??_InteruptInit 0010               __accesstop 0060  
__end_of__initialization 02F0            ___rparam_used 000001           __pcstackCOMRAM 0001  
          __end_of_delay 02BA                  ??_delay 0012       __size_of_setPeriod 0008  
                _CCP1CON 000FBD                  _CCP2CON 000FBA                  _CCP3CON 000FB7  
            setDuty@duty 0010             ?i2_setPeriod 0001                  __Hparam 0000  
                __Lparam 0000            setDuty@chanId 0011                  _PwmInit 022A  
                __pcinit 02EE                  __ramtop 1000     __end_of_InteruptInit 0304  
                __ptext0 02DA                  __ptext1 0304                  __ptext2 022A  
                __ptext3 0012                  __ptext4 0262                  __ptext5 028E  
                __ptext6 02BA                  __ptext7 02FA                  __ptext9 030C  
           ?_LedControl5 0001                  _setDuty 0262   __size_of_intrerupt_ext 0222  
   __size_of_Adc_GetMess 0020           __pintcode_body 0192     end_of_initialization 02F0  
      __end_of_setPeriod 030C                  int_func 0192     LedControl5@potiValue 0016  
              _TRISCbits 000F94                _TRISGbits 000F98            _intrerupt_ext 0008  
      i2setPeriod@period 0001      start_initialization 02EE           ?_intrerupt_ext 0001  
   __size_ofi2_setPeriod 0008    __size_of_InteruptInit 000A              __pbssCOMRAM 0019  
   __size_of_LedControl5 0180             _InteruptInit 02FA                 ?_PwmInit 0001  
              __pintcode 0008                 ?_setDuty 0010           __size_of_delay 002C  
              _setPeriod 0304          ??_intrerupt_ext 0002                 _PIR1bits 000F9E  
             _ADCON0bits 000FC2             LedControl5@i 0017            ??_Adc_GetMess 0012  
            _INTCON2bits 000FF1               ?_setPeriod 0001                 __Hrparam 0000  
               __Lrparam 0000         __size_of_PwmInit 0038         __size_of_setDuty 002C  
    __end_of_Adc_GetMess 02DA            __size_of_main 0014                 int$flags 001A  
        setPeriod@period 0010               _INTCONbits 000FF2                 intlevel2 0000  
          ??i2_setPeriod 0001              ??_setPeriod 0010            ??_LedControl5 0016  
            _Adc_GetMess 02BA         Adc_GetMess@Value 0010  
