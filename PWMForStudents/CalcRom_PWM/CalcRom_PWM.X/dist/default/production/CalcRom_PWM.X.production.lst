

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Apr 19 10:29:31 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19  0000                     
    20                           ; Version 1.41 (B)
    21                           ; Generated 21/02/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F8722 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _ADRESH	set	4036
    55  0000                     _ADCON0bits	set	4034
    56  0000                     _ADCON2	set	4032
    57  0000                     _ADCON1	set	4033
    58  0000                     _ADCON0	set	4034
    59  0000                     _PR2	set	4043
    60  0000                     _INTCON2bits	set	4081
    61  0000                     _INTCONbits	set	4082
    62  0000                     _PIR1bits	set	3998
    63  0000                     _T2CON	set	4042
    64  0000                     _CCPR3L	set	4024
    65  0000                     _CCPR2L	set	4027
    66  0000                     _CCPR1L	set	4030
    67  0000                     _CCP3CON	set	4023
    68  0000                     _CCP2CON	set	4026
    69  0000                     _CCP1CON	set	4029
    70  0000                     _TRISGbits	set	3992
    71  0000                     _TRISCbits	set	3988
    72                           
    73                           ; #config settings
    74  0000                     
    75                           	psect	cinit
    76  0000EC                     __pcinit:
    77                           	opt stack 0
    78  0000EC                     start_initialization:
    79                           	opt stack 0
    80  0000EC                     __initialization:
    81                           	opt stack 0
    82                           
    83                           ; Clear objects allocated to COMRAM (1 bytes)
    84  0000EC  6A11               	clrf	__pbssCOMRAM& (0+255),c
    85  0000EE                     end_of_initialization:
    86                           	opt stack 0
    87  0000EE                     __end_of__initialization:
    88                           	opt stack 0
    89  0000EE  9012               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    90  0000F0  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    91  0000F2  0100               	movlb	0
    92  0000F4  EF6C  F000         	goto	_main	;jump to C main() function
    93                           
    94                           	psect	bssCOMRAM
    95  000011                     __pbssCOMRAM:
    96                           	opt stack 0
    97  000011                     intrerupt_ext@tempValue:
    98                           	opt stack 0
    99  000011                     	ds	1
   100                           
   101                           	psect	cstackCOMRAM
   102  000001                     __pcstackCOMRAM:
   103                           	opt stack 0
   104  000001                     i2setPeriod@period:
   105                           	opt stack 0
   106                           
   107                           ; 1 bytes @ 0x0
   108  000001                     	ds	1
   109  000002                     ??_intrerupt_ext:
   110                           
   111                           ; 1 bytes @ 0x1
   112  000002                     	ds	14
   113  000010                     setPeriod@period:
   114                           	opt stack 0
   115                           
   116                           ; 1 bytes @ 0xF
   117  000010                     	ds	1
   118  000011                     
   119                           ; 1 bytes @ 0x10
   120 ;;
   121 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   122 ;;
   123 ;; *************** function _main *****************
   124 ;; Defined at:
   125 ;;		line 35 in file "../main.c"
   126 ;; Parameters:    Size  Location     Type
   127 ;;		None
   128 ;; Auto vars:     Size  Location     Type
   129 ;;		None
   130 ;; Return value:  Size  Location     Type
   131 ;;                  1    wreg      void 
   132 ;; Registers used:
   133 ;;		wreg, status,2, cstack
   134 ;; Tracked objects:
   135 ;;		On entry : 0/0
   136 ;;		On exit  : 0/0
   137 ;;		Unchanged: 0/0
   138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   143 ;;Total ram usage:        0 bytes
   144 ;; Hardware stack levels required when called:    3
   145 ;; This function calls:
   146 ;;		_InteruptInit
   147 ;;		_LedAction
   148 ;;		_PwmInit
   149 ;;		_setPeriod
   150 ;; This function is called by:
   151 ;;		Startup code after reset
   152 ;; This function uses a non-reentrant model
   153 ;;
   154                           
   155                           	psect	text0
   156  0000D8                     __ptext0:
   157                           	opt stack 0
   158  0000D8                     _main:
   159                           	opt stack 28
   160                           
   161                           ;main.c: 38: PwmInit();
   162                           
   163                           ;incstack = 0
   164  0000D8  EC55  F000         	call	_PwmInit	;wreg free
   165                           
   166                           ;main.c: 39: InteruptInit();
   167  0000DC  EC7C  F000         	call	_InteruptInit	;wreg free
   168                           
   169                           ;main.c: 40: setPeriod(0xFF);
   170  0000E0  0EFF               	movlw	255
   171  0000E2  EC81  F000         	call	_setPeriod
   172  0000E6                     l728:
   173                           
   174                           ;main.c: 42: {
   175                           ;main.c: 43: LedAction();
   176  0000E6  EC89  F000         	call	_LedAction	;wreg free
   177  0000EA  D7FD               	goto	l728
   178  0000EC                     __end_of_main:
   179                           	opt stack 0
   180                           
   181 ;; *************** function _setPeriod *****************
   182 ;; Defined at:
   183 ;;		line 59 in file "../Pwm.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;  period          1    wreg     unsigned char 
   186 ;; Auto vars:     Size  Location     Type
   187 ;;  period          1   15[COMRAM] unsigned char 
   188 ;; Return value:  Size  Location     Type
   189 ;;                  1    wreg      void 
   190 ;; Registers used:
   191 ;;		wreg
   192 ;; Tracked objects:
   193 ;;		On entry : 0/0
   194 ;;		On exit  : 0/0
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   200 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   201 ;;Total ram usage:        1 bytes
   202 ;; Hardware stack levels used:    1
   203 ;; Hardware stack levels required when called:    2
   204 ;; This function calls:
   205 ;;		Nothing
   206 ;; This function is called by:
   207 ;;		_main
   208 ;; This function uses a non-reentrant model
   209 ;;
   210                           
   211                           	psect	text1
   212  000102                     __ptext1:
   213                           	opt stack 0
   214  000102                     _setPeriod:
   215                           	opt stack 28
   216                           
   217                           ;incstack = 0
   218                           ;setPeriod@period stored from wreg
   219  000102  6E10               	movwf	setPeriod@period,c
   220                           
   221                           ;Pwm.c: 61: PR2 = period;
   222  000104  C010  FFCB         	movff	setPeriod@period,4043	;volatile
   223  000108  0012               	return		;funcret
   224  00010A                     __end_of_setPeriod:
   225                           	opt stack 0
   226                           
   227 ;; *************** function _PwmInit *****************
   228 ;; Defined at:
   229 ;;		line 7 in file "../Pwm.c"
   230 ;; Parameters:    Size  Location     Type
   231 ;;		None
   232 ;; Auto vars:     Size  Location     Type
   233 ;;		None
   234 ;; Return value:  Size  Location     Type
   235 ;;                  1    wreg      void 
   236 ;; Registers used:
   237 ;;		wreg, status,2
   238 ;; Tracked objects:
   239 ;;		On entry : 0/0
   240 ;;		On exit  : 0/0
   241 ;;		Unchanged: 0/0
   242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   247 ;;Total ram usage:        0 bytes
   248 ;; Hardware stack levels used:    1
   249 ;; Hardware stack levels required when called:    2
   250 ;; This function calls:
   251 ;;		Nothing
   252 ;; This function is called by:
   253 ;;		_main
   254 ;; This function uses a non-reentrant model
   255 ;;
   256                           
   257                           	psect	text2
   258  0000AA                     __ptext2:
   259                           	opt stack 0
   260  0000AA                     _PwmInit:
   261                           	opt stack 28
   262                           
   263                           ;Pwm.c: 9: TRISCbits.RC2=1;
   264                           
   265                           ;incstack = 0
   266  0000AA  8494               	bsf	3988,2,c	;volatile
   267                           
   268                           ;Pwm.c: 10: TRISCbits.RC1=1;
   269  0000AC  8294               	bsf	3988,1,c	;volatile
   270                           
   271                           ;Pwm.c: 11: TRISGbits.RG0=1;
   272  0000AE  8098               	bsf	3992,0,c	;volatile
   273                           
   274                           ;Pwm.c: 13: CCP1CON=0b00001100;
   275  0000B0  0E0C               	movlw	12
   276  0000B2  6EBD               	movwf	4029,c	;volatile
   277                           
   278                           ;Pwm.c: 14: CCP2CON=0b00001100;
   279  0000B4  0E0C               	movlw	12
   280  0000B6  6EBA               	movwf	4026,c	;volatile
   281                           
   282                           ;Pwm.c: 15: CCP3CON=0b00001100;
   283  0000B8  0E0C               	movlw	12
   284  0000BA  6EB7               	movwf	4023,c	;volatile
   285                           
   286                           ;Pwm.c: 17: CCPR1L=0x00;
   287  0000BC  0E00               	movlw	0
   288  0000BE  6EBE               	movwf	4030,c	;volatile
   289                           
   290                           ;Pwm.c: 18: CCPR2L=0x00;
   291  0000C0  0E00               	movlw	0
   292  0000C2  6EBB               	movwf	4027,c	;volatile
   293                           
   294                           ;Pwm.c: 19: CCPR3L=0x00;
   295  0000C4  0E00               	movlw	0
   296  0000C6  6EB8               	movwf	4024,c	;volatile
   297                           
   298                           ;Pwm.c: 21: T2CON=0b00000101;
   299  0000C8  0E05               	movlw	5
   300  0000CA  6ECA               	movwf	4042,c	;volatile
   301  0000CC                     l29:
   302  0000CC  A29E               	btfss	3998,1,c	;volatile
   303  0000CE  D7FE               	goto	l29
   304                           
   305                           ;Pwm.c: 24: TRISCbits.RC2=0;
   306  0000D0  9494               	bcf	3988,2,c	;volatile
   307                           
   308                           ;Pwm.c: 25: TRISCbits.RC1=0;
   309  0000D2  9294               	bcf	3988,1,c	;volatile
   310                           
   311                           ;Pwm.c: 26: TRISGbits.RG0=0;
   312  0000D4  9098               	bcf	3992,0,c	;volatile
   313  0000D6  0012               	return		;funcret
   314  0000D8                     __end_of_PwmInit:
   315                           	opt stack 0
   316                           
   317 ;; *************** function _LedAction *****************
   318 ;; Defined at:
   319 ;;		line 64 in file "../Pwm.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		None
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   337 ;;Total ram usage:        0 bytes
   338 ;; Hardware stack levels used:    1
   339 ;; Hardware stack levels required when called:    2
   340 ;; This function calls:
   341 ;;		Nothing
   342 ;; This function is called by:
   343 ;;		_main
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347                           	psect	text3
   348  000112                     __ptext3:
   349                           	opt stack 0
   350  000112                     _LedAction:
   351                           	opt stack 28
   352                           
   353                           ;incstack = 0
   354  000112  0012               	return		;funcret
   355  000114                     __end_of_LedAction:
   356                           	opt stack 0
   357                           
   358 ;; *************** function _InteruptInit *****************
   359 ;; Defined at:
   360 ;;		line 29 in file "../Pwm.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;		None
   365 ;; Return value:  Size  Location     Type
   366 ;;                  1    wreg      void 
   367 ;; Registers used:
   368 ;;		None
   369 ;; Tracked objects:
   370 ;;		On entry : 0/0
   371 ;;		On exit  : 0/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   378 ;;Total ram usage:        0 bytes
   379 ;; Hardware stack levels used:    1
   380 ;; Hardware stack levels required when called:    2
   381 ;; This function calls:
   382 ;;		Nothing
   383 ;; This function is called by:
   384 ;;		_main
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388                           	psect	text4
   389  0000F8                     __ptext4:
   390                           	opt stack 0
   391  0000F8                     _InteruptInit:
   392                           	opt stack 28
   393                           
   394                           ;Pwm.c: 31: INTCONbits.GIE=1;
   395                           
   396                           ;incstack = 0
   397  0000F8  8EF2               	bsf	intcon,7,c	;volatile
   398                           
   399                           ;Pwm.c: 32: INTCONbits.INT0IE=1;
   400  0000FA  88F2               	bsf	intcon,4,c	;volatile
   401                           
   402                           ;Pwm.c: 33: INTCONbits.INT0IF=0;
   403  0000FC  92F2               	bcf	intcon,1,c	;volatile
   404                           
   405                           ;Pwm.c: 34: INTCON2bits.INTEDG0=1;
   406  0000FE  8CF1               	bsf	intcon2,6,c	;volatile
   407  000100  0012               	return		;funcret
   408  000102                     __end_of_InteruptInit:
   409                           	opt stack 0
   410                           intcon	equ	0xFF2
   411                           intcon2	equ	0xFF1
   412                           
   413 ;; *************** function _intrerupt_ext *****************
   414 ;; Defined at:
   415 ;;		line 15 in file "../main.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2, cstack
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   431 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   432 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   433 ;;Total ram usage:       14 bytes
   434 ;; Hardware stack levels used:    1
   435 ;; Hardware stack levels required when called:    1
   436 ;; This function calls:
   437 ;;		i2_setPeriod
   438 ;; This function is called by:
   439 ;;		Interrupt level 2
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           	psect	intcode
   444  000008                     __pintcode:
   445                           	opt stack 0
   446  000008                     _intrerupt_ext:
   447                           	opt stack 28
   448                           
   449                           ;incstack = 0
   450  000008  8212               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   451  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   452                           intcon	equ	0xFF2
   453                           intcon2	equ	0xFF1
   454                           
   455                           	psect	intcode_body
   456  000012                     __pintcode_body:
   457                           	opt stack 28
   458  000012                     int_func:
   459                           	opt stack 28
   460  000012  0006               	pop		; remove dummy address from shadow register refresh
   461  000014  CFFA F002          	movff	pclath,??_intrerupt_ext
   462  000018  CFFB F003          	movff	pclatu,??_intrerupt_ext+1
   463  00001C  CFE9 F004          	movff	fsr0l,??_intrerupt_ext+2
   464  000020  CFEA F005          	movff	fsr0h,??_intrerupt_ext+3
   465  000024  CFE1 F006          	movff	fsr1l,??_intrerupt_ext+4
   466  000028  CFE2 F007          	movff	fsr1h,??_intrerupt_ext+5
   467  00002C  CFD9 F008          	movff	fsr2l,??_intrerupt_ext+6
   468  000030  CFDA F009          	movff	fsr2h,??_intrerupt_ext+7
   469  000034  CFF3 F00A          	movff	prodl,??_intrerupt_ext+8
   470  000038  CFF4 F00B          	movff	prodh,??_intrerupt_ext+9
   471  00003C  CFF6 F00C          	movff	tblptrl,??_intrerupt_ext+10
   472  000040  CFF7 F00D          	movff	tblptrh,??_intrerupt_ext+11
   473  000044  CFF8 F00E          	movff	tblptru,??_intrerupt_ext+12
   474  000048  CFF5 F00F          	movff	tablat,??_intrerupt_ext+13
   475                           
   476                           ;main.c: 17: static uint8 tempValue = 0;
   477                           ;main.c: 19: if(INTCONbits.INT0IE && INTCONbits.INT0IF)
   478  00004C  B8F2               	btfsc	intcon,4,c	;volatile
   479  00004E  A2F2               	btfss	intcon,1,c	;volatile
   480  000050  D00E               	goto	i2l70
   481                           
   482                           ;main.c: 20: {
   483                           ;main.c: 21: if(tempValue == 0)
   484  000052  5011               	movf	intrerupt_ext@tempValue,w,c
   485  000054  A4D8               	btfss	status,2,c
   486  000056  D005               	goto	i2l748
   487                           
   488                           ;main.c: 22: {
   489                           ;main.c: 23: setPeriod(0x7D);
   490  000058  0E7D               	movlw	125
   491  00005A  EC85  F000         	call	i2_setPeriod
   492                           
   493                           ;main.c: 24: tempValue = 1;
   494  00005E  0E01               	movlw	1
   495  000060  D004               	goto	L1
   496  000062                     i2l748:
   497                           
   498                           ;main.c: 26: else
   499                           ;main.c: 27: {
   500                           ;main.c: 28: setPeriod(0xFF);
   501  000062  0EFF               	movlw	255
   502  000064  EC85  F000         	call	i2_setPeriod
   503                           
   504                           ;main.c: 29: tempValue = 0;
   505  000068  0E00               	movlw	0
   506  00006A                     L1:
   507  00006A  6E11               	movwf	intrerupt_ext@tempValue,c
   508                           
   509                           ;main.c: 30: }
   510                           ;main.c: 31: INTCONbits.INT0IF = 0;
   511  00006C  92F2               	bcf	intcon,1,c	;volatile
   512  00006E                     i2l70:
   513  00006E  C00F  FFF5         	movff	??_intrerupt_ext+13,tablat
   514  000072  C00E  FFF8         	movff	??_intrerupt_ext+12,tblptru
   515  000076  C00D  FFF7         	movff	??_intrerupt_ext+11,tblptrh
   516  00007A  C00C  FFF6         	movff	??_intrerupt_ext+10,tblptrl
   517  00007E  C00B  FFF4         	movff	??_intrerupt_ext+9,prodh
   518  000082  C00A  FFF3         	movff	??_intrerupt_ext+8,prodl
   519  000086  C009  FFDA         	movff	??_intrerupt_ext+7,fsr2h
   520  00008A  C008  FFD9         	movff	??_intrerupt_ext+6,fsr2l
   521  00008E  C007  FFE2         	movff	??_intrerupt_ext+5,fsr1h
   522  000092  C006  FFE1         	movff	??_intrerupt_ext+4,fsr1l
   523  000096  C005  FFEA         	movff	??_intrerupt_ext+3,fsr0h
   524  00009A  C004  FFE9         	movff	??_intrerupt_ext+2,fsr0l
   525  00009E  C003  FFFB         	movff	??_intrerupt_ext+1,pclatu
   526  0000A2  C002  FFFA         	movff	??_intrerupt_ext,pclath
   527  0000A6  9212               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   528  0000A8  0011               	retfie		f
   529  0000AA                     __end_of_intrerupt_ext:
   530                           	opt stack 0
   531                           pclatu	equ	0xFFB
   532                           pclath	equ	0xFFA
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           prodh	equ	0xFF4
   538                           prodl	equ	0xFF3
   539                           intcon	equ	0xFF2
   540                           intcon2	equ	0xFF1
   541                           fsr0h	equ	0xFEA
   542                           fsr0l	equ	0xFE9
   543                           fsr1h	equ	0xFE2
   544                           fsr1l	equ	0xFE1
   545                           fsr2h	equ	0xFDA
   546                           fsr2l	equ	0xFD9
   547                           status	equ	0xFD8
   548                           
   549 ;; *************** function i2_setPeriod *****************
   550 ;; Defined at:
   551 ;;		line 59 in file "../Pwm.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;  period          1    wreg     unsigned char 
   554 ;; Auto vars:     Size  Location     Type
   555 ;;  period          1    0[COMRAM] unsigned char 
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;Total ram usage:        1 bytes
   570 ;; Hardware stack levels used:    1
   571 ;; This function calls:
   572 ;;		Nothing
   573 ;; This function is called by:
   574 ;;		_intrerupt_ext
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           	psect	text6
   579  00010A                     __ptext6:
   580                           	opt stack 0
   581  00010A                     i2_setPeriod:
   582                           	opt stack 28
   583                           
   584                           ;incstack = 0
   585                           ;i2setPeriod@period stored from wreg
   586  00010A  6E01               	movwf	i2setPeriod@period,c
   587                           
   588                           ;Pwm.c: 61: PR2 = period;
   589  00010C  C001  FFCB         	movff	i2setPeriod@period,4043	;volatile
   590  000110  0012               	return		;funcret
   591  000112                     __end_ofi2_setPeriod:
   592                           	opt stack 0
   593  0000                     pclatu	equ	0xFFB
   594                           pclath	equ	0xFFA
   595                           tblptru	equ	0xFF8
   596                           tblptrh	equ	0xFF7
   597                           tblptrl	equ	0xFF6
   598                           tablat	equ	0xFF5
   599                           prodh	equ	0xFF4
   600                           prodl	equ	0xFF3
   601                           intcon	equ	0xFF2
   602                           intcon2	equ	0xFF1
   603                           fsr0h	equ	0xFEA
   604                           fsr0l	equ	0xFE9
   605                           fsr1h	equ	0xFE2
   606                           fsr1l	equ	0xFE1
   607                           fsr2h	equ	0xFDA
   608                           fsr2l	equ	0xFD9
   609                           status	equ	0xFD8
   610                           pclatu	equ	0xFFB
   611                           pclath	equ	0xFFA
   612                           tblptru	equ	0xFF8
   613                           tblptrh	equ	0xFF7
   614                           tblptrl	equ	0xFF6
   615                           tablat	equ	0xFF5
   616                           prodh	equ	0xFF4
   617                           prodl	equ	0xFF3
   618                           intcon	equ	0xFF2
   619                           intcon2	equ	0xFF1
   620                           fsr0h	equ	0xFEA
   621                           fsr0l	equ	0xFE9
   622                           fsr1h	equ	0xFE2
   623                           fsr1l	equ	0xFE1
   624                           fsr2h	equ	0xFDA
   625                           fsr2l	equ	0xFD9
   626                           status	equ	0xFD8
   627                           
   628                           	psect	rparam
   629  0000                     pclatu	equ	0xFFB
   630                           pclath	equ	0xFFA
   631                           tblptru	equ	0xFF8
   632                           tblptrh	equ	0xFF7
   633                           tblptrl	equ	0xFF6
   634                           tablat	equ	0xFF5
   635                           prodh	equ	0xFF4
   636                           prodl	equ	0xFF3
   637                           intcon	equ	0xFF2
   638                           intcon2	equ	0xFF1
   639                           fsr0h	equ	0xFEA
   640                           fsr0l	equ	0xFE9
   641                           fsr1h	equ	0xFE2
   642                           fsr1l	equ	0xFE1
   643                           fsr2h	equ	0xFDA
   644                           fsr2l	equ	0xFD9
   645                           status	equ	0xFD8
   646                           
   647                           	psect	temp
   648  000012                     btemp:
   649                           	opt stack 0
   650  000012                     	ds	1
   651  0000                     int$flags	set	btemp
   652                           pclatu	equ	0xFFB
   653                           pclath	equ	0xFFA
   654                           tblptru	equ	0xFF8
   655                           tblptrh	equ	0xFF7
   656                           tblptrl	equ	0xFF6
   657                           tablat	equ	0xFF5
   658                           prodh	equ	0xFF4
   659                           prodl	equ	0xFF3
   660                           intcon	equ	0xFF2
   661                           intcon2	equ	0xFF1
   662                           fsr0h	equ	0xFEA
   663                           fsr0l	equ	0xFE9
   664                           fsr1h	equ	0xFE2
   665                           fsr1l	equ	0xFE1
   666                           fsr2h	equ	0xFDA
   667                           fsr2l	equ	0xFD9
   668                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     16      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_setPeriod

Critical Paths under _intrerupt_ext in COMRAM

    _intrerupt_ext->i2_setPeriod

Critical Paths under _main in BANK0

    None.

Critical Paths under _intrerupt_ext in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _intrerupt_ext in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _intrerupt_ext in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _intrerupt_ext in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _intrerupt_ext in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _intrerupt_ext in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _intrerupt_ext in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _intrerupt_ext in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _intrerupt_ext in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _intrerupt_ext in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _intrerupt_ext in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _intrerupt_ext in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _intrerupt_ext in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _intrerupt_ext in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _intrerupt_ext in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _intrerupt_ext in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                       _InteruptInit
                          _LedAction
                            _PwmInit
                          _setPeriod
 ---------------------------------------------------------------------------------
 (1) _setPeriod                                            1     1      0      15
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LedAction                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InteruptInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _intrerupt_ext                                       14    14      0      22
                                              1 COMRAM    14    14      0
                        i2_setPeriod
 ---------------------------------------------------------------------------------
 (3) i2_setPeriod                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InteruptInit
   _LedAction
   _PwmInit
   _setPeriod

 _intrerupt_ext (ROOT)
   i2_setPeriod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     10      11       1       18.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11      32        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Apr 19 10:29:31 2018

    __end_ofi2_setPeriod 0112                       l29 00CC              __CFG_OSC$HS 000000  
                    l728 00E6                      _PR2 000FCB             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     i2l70 006E                     _main 00D8  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0012                     prodh 000FF4                     prodl 000FF3  
                   start 000E            __CFG_IESO$OFF 000000    __end_of_intrerupt_ext 00AA  
          __CFG_MCLRE$ON 000000             ___param_bank 000000          __end_of_PwmInit 00D8  
                  ?_main 0001                    _T2CON 000FCA                    i2l748 0062  
          __CFG_PWRT$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_BOREN$OFF 000000  
                  pclath 000FFA                    tablat 000FF5                    status 000FD8  
            i2_setPeriod 010A          __initialization 00EC             __end_of_main 00EC  
 intrerupt_ext@tempValue 0011                   ??_main 0011       __size_of_LedAction 0002  
          __activetblptr 000003                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _CCPR1L 000FBE  
                 _CCPR2L 000FBB                   _CCPR3L 000FB8            ?_InteruptInit 0001  
         __CFG_XINST$OFF 000000                ??_PwmInit 0010                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8           ??_InteruptInit 0010  
             __accesstop 0060  __end_of__initialization 00EE        __end_of_LedAction 0114  
          ___rparam_used 000001           __pcstackCOMRAM 0001       __size_of_setPeriod 0008  
                _CCP1CON 000FBD                  _CCP2CON 000FBA                  _CCP3CON 000FB7  
           ?i2_setPeriod 0001                  __Hparam 0000                  __Lparam 0000  
                _PwmInit 00AA                  __pcinit 00EC                  __ramtop 1000  
   __end_of_InteruptInit 0102                  __ptext0 00D8                  __ptext1 0102  
                __ptext2 00AA                  __ptext3 0112                  __ptext4 00F8  
                __ptext6 010A   __size_of_intrerupt_ext 00A2           __pintcode_body 0012  
   end_of_initialization 00EE        __end_of_setPeriod 010A                  int_func 0012  
              _TRISCbits 000F94                _TRISGbits 000F98                _LedAction 0112  
          _intrerupt_ext 0008        i2setPeriod@period 0001      start_initialization 00EC  
         ?_intrerupt_ext 0001               ?_LedAction 0001     __size_ofi2_setPeriod 0008  
  __size_of_InteruptInit 000A              __pbssCOMRAM 0011             _InteruptInit 00F8  
               ?_PwmInit 0001                __pintcode 0008                _setPeriod 0102  
        ??_intrerupt_ext 0002                 _PIR1bits 000F9E              ??_LedAction 0010  
             _ADCON0bits 000FC2              _INTCON2bits 000FF1               ?_setPeriod 0001  
               __Hrparam 0000                 __Lrparam 0000         __size_of_PwmInit 002E  
          __size_of_main 0014                 int$flags 0012          setPeriod@period 0010  
             _INTCONbits 000FF2                 intlevel2 0000            ??i2_setPeriod 0001  
            ??_setPeriod 0010  
